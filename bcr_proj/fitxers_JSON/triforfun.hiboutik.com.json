{
  "openapi": "3.0.1",
  "info": {
    "title": "Hiboutik Rest API",
    "contact": {
      "name": "Le Hibou",
      "url": "https://triforfun.hiboutik.com/api/"
    },
    "version": "2.0"
  },
  "servers": [
    {
      "url": "https://triforfun.hiboutik.com/api"
    }
  ],
  "paths": {
    "/action_links": {
      "get": {
        "tags": [
          "action_links"
        ],
        "summary": "Returns action links/buttons",
        "description": "Returns action links/buttons<br />Scope for public applications : none",
        "operationId": "api.action_links.get",
        "responses": {
          "200": {
            "description": "Action buttons",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/action_links/": {
      "post": {
        "tags": [
          "action_links"
        ],
        "summary": "Add an action link/button",
        "description": "Add an action link/button",
        "operationId": "api.action_links.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "action_link_label",
                  "action_link_location",
                  "action_link_url"
                ],
                "type": "object",
                "properties": {
                  "action_link_label": {
                    "type": "string",
                    "description": "The text that will appear to the merchant. It should be task oriented, and not just the name of your app."
                  },
                  "action_link_location": {
                    "type": "string",
                    "description": "The page where this link should appear to the merchant. Try to place it only where it makes logical sense for the user. In general, avoid adding admin links to every page.",
                    "enum": [
                      "sale",
                      "product",
                      "salebtn",
                      "stock_order",
                      "customer",
                      "timestamp",
                      "main_menu",
                      "stock_transfer",
                      "salebtnleft",
                      "dailystats",
                      "sale_line_item",
                      "kitchen_screen"
                    ]
                  },
                  "action_link_url": {
                    "type": "string",
                    "description": "The URL where your app is hosted, or a specific URL for this task. If your url is non valid or if it drops an error, your action will be blocked"
                  },
                  "action_link_type": {
                    "type": "string",
                    "description": "How the url should be called. page for a simple link, embedded to appear within a frame in the application or silent for a curl-like scheme. Possible values : silent , embedded, page. Default value : page",
                    "enum": [
                      "page",
                      "embedded",
                      "silent"
                    ]
                  },
                  "action_link_target": {
                    "type": "string",
                    "description": "The target if action_link_type = page i.e. if your link opens a page outside the application. If empty, default value is _self.",
                    "enum": [
                      "_self",
                      "_blank",
                      "_top"
                    ]
                  },
                  "app_link_id": {
                    "type": "string",
                    "description": "The unique link id if used by an app (if already exists, it will be replaced). Max 80 chars."
                  },
                  "action_link_store_id": {
                    "type": "integer",
                    "description": "The store id where the link should be displayed. If value is 0, the link will be displayed in every store. If empty, default value is 0.",
                    "format": "int32"
                  },
                  "action_link_user_id": {
                    "type": "integer",
                    "description": "The user id For wich the link should be displayed. If value is 0, the link will be displayed for all users. If empty, default value is 0",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "action_link_label",
                  "action_link_location",
                  "action_link_url"
                ],
                "type": "object",
                "properties": {
                  "action_link_label": {
                    "type": "string",
                    "description": "The text that will appear to the merchant. It should be task oriented, and not just the name of your app."
                  },
                  "action_link_location": {
                    "type": "string",
                    "description": "The page where this link should appear to the merchant. Try to place it only where it makes logical sense for the user. In general, avoid adding admin links to every page.",
                    "enum": [
                      "sale",
                      "product",
                      "salebtn",
                      "stock_order",
                      "customer",
                      "timestamp",
                      "main_menu",
                      "stock_transfer",
                      "salebtnleft",
                      "dailystats",
                      "sale_line_item",
                      "kitchen_screen"
                    ]
                  },
                  "action_link_url": {
                    "type": "string",
                    "description": "The URL where your app is hosted, or a specific URL for this task. If your url is non valid or if it drops an error, your action will be blocked"
                  },
                  "action_link_type": {
                    "type": "string",
                    "description": "How the url should be called. page for a simple link, embedded to appear within a frame in the application or silent for a curl-like scheme. Possible values : silent , embedded, page. Default value : page",
                    "enum": [
                      "page",
                      "embedded",
                      "silent"
                    ]
                  },
                  "action_link_target": {
                    "type": "string",
                    "description": "The target if action_link_type = page i.e. if your link opens a page outside the application. If empty, default value is _self.",
                    "enum": [
                      "_self",
                      "_blank",
                      "_top"
                    ]
                  },
                  "app_link_id": {
                    "type": "string",
                    "description": "The unique link id if used by an app (if already exists, it will be replaced). Max 80 chars."
                  },
                  "action_link_store_id": {
                    "type": "integer",
                    "description": "The store id where the link should be displayed. If value is 0, the link will be displayed in every store. If empty, default value is 0.",
                    "format": "int32"
                  },
                  "action_link_user_id": {
                    "type": "integer",
                    "description": "The user id For wich the link should be displayed. If value is 0, the link will be displayed for all users. If empty, default value is 0",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Action link/button successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized action",
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "content": {}
          }
        }
      }
    },
    "/action_link_exec/": {
      "post": {
        "tags": [
          "action_links"
        ],
        "summary": "Execute an action link/button. If the action_link_type is 0 (embeded) the action_link_url is triggered else action_link_url is returned",
        "description": "Execute an action link/button",
        "operationId": "api.action_links.exec",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "action_link_id",
                  "action_link_ressource_id",
                  "ip_address",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "action_link_id": {
                    "type": "string",
                    "description": "action_link_id"
                  },
                  "action_link_ressource_id": {
                    "type": "string",
                    "description": "action_link_ressource_id"
                  },
                  "store_id": {
                    "type": "string",
                    "description": "store_id"
                  },
                  "ip_address": {
                    "type": "string",
                    "description": "ip_address"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "action_link_id",
                  "action_link_ressource_id",
                  "ip_address",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "action_link_id": {
                    "type": "string",
                    "description": "action_link_id"
                  },
                  "action_link_ressource_id": {
                    "type": "string",
                    "description": "action_link_ressource_id"
                  },
                  "store_id": {
                    "type": "string",
                    "description": "store_id"
                  },
                  "ip_address": {
                    "type": "string",
                    "description": "ip_address"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Action link/button successfully executed",
            "content": {}
          },
          "401": {
            "description": "Unauthorized action",
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "content": {}
          }
        }
      }
    },
    "/action_links/{action_link_id}": {
      "delete": {
        "tags": [
          "action_links"
        ],
        "summary": "Delete action_link_id",
        "description": "Delete action_link_id.",
        "operationId": "api.action_links.delete",
        "parameters": [
          {
            "name": "action_link_id",
            "in": "path",
            "description": "action_link_id to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Action link/button successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/brands": {
      "get": {
        "tags": [
          "brands"
        ],
        "summary": "Returns brands by ID",
        "description": "Returns brands by ID (ORDER BY brand_id DESC)<br />Scope for public applications : read_products<br />Results per page : 250",
        "operationId": "api.brands.index",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Brands overview",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/brands"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {}
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "brands"
        ],
        "summary": "Update a brand",
        "description": "Update a brand<br />Scope for public applications : write_products",
        "operationId": "api.brands.update",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "brand_id"
                ],
                "type": "object",
                "properties": {
                  "brand_id": {
                    "type": "integer",
                    "description": "ID of the brand that needs to be updated",
                    "format": "int32"
                  },
                  "brand_name": {
                    "type": "string",
                    "description": "New name of the brand that needs to be updated"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "brand_id"
                ],
                "type": "object",
                "properties": {
                  "brand_id": {
                    "type": "integer",
                    "description": "ID of the brand that needs to be updated",
                    "format": "int32"
                  },
                  "brand_name": {
                    "type": "string",
                    "description": "New name of the brand that needs to be updated"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Brand successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "brands"
        ],
        "summary": "Create a new brand",
        "description": "Create a new brand<br />Scope for public applications : write_products",
        "operationId": "api.brands.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "brand_name": {
                    "type": "string",
                    "description": "Name of the brand that needs to be added"
                  },
                  "brand_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "brand_name": {
                    "type": "string",
                    "description": "Name of the brand that needs to be added"
                  },
                  "brand_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Brand successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/brands/{brand_id}": {
      "delete": {
        "tags": [
          "brands"
        ],
        "summary": "Delete brand_id",
        "description": "Delete brand_id.",
        "operationId": "api.brands.delete",
        "parameters": [
          {
            "name": "brand_id",
            "in": "path",
            "description": "brand_id to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Brand successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/events/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "calendar"
        ],
        "summary": "Returns calendar events for store_id for a specific day",
        "description": "Returns calendar events for store_id for a specific day<br />Scope for public applications : read_calendar_events",
        "operationId": "api.calendar.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Taxes",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/event/{event_id}": {
      "get": {
        "tags": [
          "calendar"
        ],
        "summary": "Returns calendar event_id",
        "description": "Returns calendar event_id<br />Scope for public applications : read_calendar_events",
        "operationId": "api.calendar.event_id.index",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "description": "event_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Taxes",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/events/": {
      "post": {
        "tags": [
          "calendar"
        ],
        "summary": "Add a calendar event",
        "description": "Add a calendar event<br />Scope for public applications : write_calendar_events",
        "operationId": "api.calendar.add_event",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "start",
                  "store_id",
                  "title"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "string",
                    "description": "store_id"
                  },
                  "title": {
                    "type": "string",
                    "description": "title"
                  },
                  "start": {
                    "type": "string",
                    "description": "start | format : YYYY-MM-DD HH:MM:SS"
                  },
                  "end": {
                    "type": "string",
                    "description": "end | format : YYYY-MM-DD HH:MM:SS"
                  },
                  "url": {
                    "type": "string",
                    "description": "url"
                  },
                  "allDay": {
                    "type": "string",
                    "description": "allDay | format : null OR 1"
                  },
                  "ressource_id": {
                    "type": "string",
                    "description": "ressource_id"
                  },
                  "vendor_id": {
                    "type": "string",
                    "description": "vendor_id"
                  },
                  "customer_id": {
                    "type": "string",
                    "description": "customer_id"
                  },
                  "sale_id": {
                    "type": "string",
                    "description": "sale_id"
                  },
                  "comments": {
                    "type": "string",
                    "description": "comments"
                  },
                  "color": {
                    "type": "string",
                    "description": "color | default : #ff6600 | regex : #[A-Fa-f0-9]"
                  },
                  "textColor": {
                    "type": "string",
                    "description": "textColor | default : #ffffff | regex : #[A-Fa-f0-9]"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "start",
                  "store_id",
                  "title"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "string",
                    "description": "store_id"
                  },
                  "title": {
                    "type": "string",
                    "description": "title"
                  },
                  "start": {
                    "type": "string",
                    "description": "start | format : YYYY-MM-DD HH:MM:SS"
                  },
                  "end": {
                    "type": "string",
                    "description": "end | format : YYYY-MM-DD HH:MM:SS"
                  },
                  "url": {
                    "type": "string",
                    "description": "url"
                  },
                  "allDay": {
                    "type": "string",
                    "description": "allDay | format : null OR 1"
                  },
                  "ressource_id": {
                    "type": "string",
                    "description": "ressource_id"
                  },
                  "vendor_id": {
                    "type": "string",
                    "description": "vendor_id"
                  },
                  "customer_id": {
                    "type": "string",
                    "description": "customer_id"
                  },
                  "sale_id": {
                    "type": "string",
                    "description": "sale_id"
                  },
                  "comments": {
                    "type": "string",
                    "description": "comments"
                  },
                  "color": {
                    "type": "string",
                    "description": "color | default : #ff6600 | regex : #[A-Fa-f0-9]"
                  },
                  "textColor": {
                    "type": "string",
                    "description": "textColor | default : #ffffff | regex : #[A-Fa-f0-9]"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Tag successfully added",
            "content": {}
          },
          "400": {
            "description": "Client error",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/calendar/events/{id}/": {
      "delete": {
        "tags": [
          "calendar"
        ],
        "summary": "Delete a calendar event",
        "description": "Delete a calendar event<br />Scope for public applications : write_calendar_events",
        "operationId": "api.calendar.delete_event",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Calendar id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "Returns categories by ID",
        "description": "Returns categories by ID (ORDER BY category_id DESC)<br />Scope for public applications : read_products<br />Results per page : 250",
        "operationId": "api.categories.index",
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order by",
            "schema": {
              "type": "string",
              "enum": [
                "category_id",
                "category_name",
                "category_id_parent",
                "category_position"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort",
            "schema": {
              "type": "string",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categories overview",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/category"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized action",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "categories"
        ],
        "summary": "Update a category",
        "description": "Update a category<br />Scope for public applications : write_products",
        "operationId": "api.categories.update",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "category_attribute",
                  "category_id"
                ],
                "type": "object",
                "properties": {
                  "category_id": {
                    "type": "integer",
                    "description": "ID of the category that needs to be updated",
                    "format": "int32"
                  },
                  "category_attribute": {
                    "type": "string",
                    "description": "One of the following category attribute : category_name, category_id_parent, category_enabled, category_enabled_www, category_position, category_bck_color, category_color, category_desc, accounting_account, category_ref_ext",
                    "enum": [
                      "category_name",
                      "category_id_parent",
                      "category_enabled",
                      "category_enabled_www",
                      "category_position",
                      "category_bck_color",
                      "category_color",
                      "category_desc",
                      "accounting_account",
                      "category_ref_ext"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the category attribute"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "category_attribute",
                  "category_id"
                ],
                "type": "object",
                "properties": {
                  "category_id": {
                    "type": "integer",
                    "description": "ID of the category that needs to be updated",
                    "format": "int32"
                  },
                  "category_attribute": {
                    "type": "string",
                    "description": "One of the following category attribute : category_name, category_id_parent, category_enabled, category_enabled_www, category_position, category_bck_color, category_color, category_desc, accounting_account, category_ref_ext",
                    "enum": [
                      "category_name",
                      "category_id_parent",
                      "category_enabled",
                      "category_enabled_www",
                      "category_position",
                      "category_bck_color",
                      "category_color",
                      "category_desc",
                      "accounting_account",
                      "category_ref_ext"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the category attribute"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Category successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "Create a new category",
        "description": "Create a new category<br />Scope for public applications : write_products",
        "operationId": "api.categories.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "category_name": {
                    "type": "string",
                    "description": "Name of the category that needs to be added"
                  },
                  "category_parent_id": {
                    "type": "integer",
                    "description": "Parent ID of the category that needs to be added",
                    "format": "int32"
                  },
                  "category_enabled": {
                    "type": "integer",
                    "description": "Enabled ? 0|1 (default:1)",
                    "format": "int32"
                  },
                  "category_bck_color": {
                    "type": "string",
                    "description": "Background color (default:#FF8C00)"
                  },
                  "category_color": {
                    "type": "string",
                    "description": "Font color (default:#FFFFFF)"
                  },
                  "category_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "category_name": {
                    "type": "string",
                    "description": "Name of the category that needs to be added"
                  },
                  "category_parent_id": {
                    "type": "integer",
                    "description": "Parent ID of the category that needs to be added",
                    "format": "int32"
                  },
                  "category_enabled": {
                    "type": "integer",
                    "description": "Enabled ? 0|1 (default:1)",
                    "format": "int32"
                  },
                  "category_bck_color": {
                    "type": "string",
                    "description": "Background color (default:#FF8C00)"
                  },
                  "category_color": {
                    "type": "string",
                    "description": "Font color (default:#FFFFFF)"
                  },
                  "category_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Brand successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/category_image_1000x1000/{category_id}/": {
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "Add a category image",
        "description": "Add a category image<br />Scope for public applications : write_products",
        "operationId": "api.category_image_1000x1000.add",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "description": "ID of the category",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "image"
                ],
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "description": "Image of the category. You must provide a valid square .jpeg or .jpg image file, no bigger than 1Mb. Final image will be resized to 1000x1000px.",
                    "format": "binary"
                  },
                  "framing_type": {
                    "type": "string",
                    "description": "One of the following framing type : default, center_zoom or frame",
                    "enum": [
                      "default",
                      "center_zoom",
                      "frame"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Category image successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{category_id}": {
      "delete": {
        "tags": [
          "categories"
        ],
        "summary": "Delete a category",
        "description": "Delete a category. If the category has sub categories they will be deleted. ",
        "operationId": "api.categories.delete",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "description": "category_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/credit_notes/{store_id}": {
      "get": {
        "tags": [
          "credit notes"
        ],
        "summary": "Returns pending credit notes in a store_id",
        "description": "Returns pending credit notes in a store_id<br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.credit_notes.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Open sales",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Returns customers by ID",
        "description": "Returns customers by ID (ORDER BY customers_id DESC)<br />Scope for public applications : read_customers<br />Results per page : 250",
        "operationId": "api.customers.index",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customers overview",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "customers"
        ],
        "summary": "Create a new customer",
        "description": "Create a new customer<br />Scope for public applications : write_customers",
        "operationId": "api.customers.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "customers_first_name": {
                    "type": "string",
                    "description": "First name of the customer that needs to be added"
                  },
                  "customers_last_name": {
                    "type": "string",
                    "description": "Last name of the customer that needs to be added"
                  },
                  "customers_company": {
                    "type": "string",
                    "description": "Company of the customer that needs to be added"
                  },
                  "customers_email": {
                    "type": "string",
                    "description": "Email of the customer that needs to be added"
                  },
                  "customers_country": {
                    "type": "string",
                    "description": "Country of the customer that needs to be added (iso_code_3/iso_alpha3)"
                  },
                  "customers_tax_number": {
                    "type": "string",
                    "description": "Tax number of the customer that needs to be added"
                  },
                  "customers_phone_number": {
                    "type": "string",
                    "description": "Phone number of the customer that needs to be added"
                  },
                  "customers_birth_date": {
                    "type": "string",
                    "description": "Birth date of the customer that needs to be added (YYYY-MM-DD)"
                  },
                  "customers_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  },
                  "customers_misc": {
                    "type": "string",
                    "description": "Misc"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customers_first_name": {
                    "type": "string",
                    "description": "First name of the customer that needs to be added"
                  },
                  "customers_last_name": {
                    "type": "string",
                    "description": "Last name of the customer that needs to be added"
                  },
                  "customers_company": {
                    "type": "string",
                    "description": "Company of the customer that needs to be added"
                  },
                  "customers_email": {
                    "type": "string",
                    "description": "Email of the customer that needs to be added"
                  },
                  "customers_country": {
                    "type": "string",
                    "description": "Country of the customer that needs to be added (iso_code_3/iso_alpha3)"
                  },
                  "customers_tax_number": {
                    "type": "string",
                    "description": "Tax number of the customer that needs to be added"
                  },
                  "customers_phone_number": {
                    "type": "string",
                    "description": "Phone number of the customer that needs to be added"
                  },
                  "customers_birth_date": {
                    "type": "string",
                    "description": "Birth date of the customer that needs to be added (YYYY-MM-DD)"
                  },
                  "customers_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  },
                  "customers_misc": {
                    "type": "string",
                    "description": "Misc"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers_birthday/{month}/{day}": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Returns customers born on a specific day",
        "description": "Returns customers born on a specific day<br />Scope for public applications : read_customers",
        "operationId": "api.customers_birthday.index",
        "parameters": [
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customers lists",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/lists/": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Returns customers lists by ID",
        "description": "Returns customers lists (ORDER BY list_id DESC)<br />Scope for public applications : read_customers<br />Results per page : 250",
        "operationId": "api.customers_lists.index",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customers lists overview",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/lists/{list_id}": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Returns customers from a specific list",
        "description": "Returns customers from a specific list<br />Scope for public applications : read_customers<br />Results per page : 250",
        "operationId": "api.customers_lists.list_id.search",
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "description": "List ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customers details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/number_of_customers": {
      "post": {
        "tags": [
          "customers"
        ],
        "summary": "Set number of customers in shop_id at date",
        "description": "Set number of customers in shop_id at date<br />Scope for public applications : write_reports",
        "operationId": "api.customers.set_number",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "number_of_customers": {
                    "type": "string",
                    "description": "Number of customers"
                  },
                  "date": {
                    "type": "string",
                    "description": "Date | format : YYYY-MM-DD"
                  },
                  "shop_id": {
                    "type": "integer",
                    "description": "shop_id",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number_of_customers": {
                    "type": "string",
                    "description": "Number of customers"
                  },
                  "date": {
                    "type": "string",
                    "description": "Date | format : YYYY-MM-DD"
                  },
                  "shop_id": {
                    "type": "integer",
                    "description": "shop_id",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Number of customers successfully saved",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers_addresses/{address_id}": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Returns details of a customer address",
        "description": "Returns details of a customer address<br />Scope for public applications : read_customers",
        "operationId": "api.customers_addresses.address_id",
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "description": "address_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sale details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "customers"
        ],
        "summary": "Delete a customer address",
        "description": "Delete a customer address<br />Scope for public applications : write_customers",
        "operationId": "api.customers_addresses.delete",
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "description": "address_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Address successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers_addresses": {
      "post": {
        "tags": [
          "customers"
        ],
        "summary": "Add a customer address",
        "description": "Add a customer address<br />Scope for public applications : write_customers",
        "operationId": "api.customers_addresses.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "customers_id": {
                    "type": "integer",
                    "description": "customers_id",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customers_id": {
                    "type": "integer",
                    "description": "customers_id",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer address successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers_addresses/{address_id}/": {
      "put": {
        "tags": [
          "customers"
        ],
        "summary": "Update a customer address",
        "description": "Update a customer address<br />Scope for public applications : write_customers",
        "operationId": "api.customers_addresses.update",
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "description": "address_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "address_attribute"
                ],
                "type": "object",
                "properties": {
                  "address_attribute": {
                    "type": "string",
                    "description": "One of the following address attribute : gender (0:unknown|1:male|2:female), first_name, last_name, email, phone, company, address, zip_code, city, state, country (iso_code_3), display (0|1), other, default (0|1), tax_number, company_number, legal_status",
                    "enum": [
                      "gender",
                      "first_name",
                      "last_name",
                      "email",
                      "phone",
                      "company",
                      "address",
                      "zip_code",
                      "city",
                      "state",
                      "country",
                      "display",
                      "other",
                      "default",
                      "tax_number",
                      "company_number",
                      "legal_status"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the address attribute"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "address_attribute"
                ],
                "type": "object",
                "properties": {
                  "address_attribute": {
                    "type": "string",
                    "description": "One of the following address attribute : gender (0:unknown|1:male|2:female), first_name, last_name, email, phone, company, address, zip_code, city, state, country (iso_code_3), display (0|1), other, default (0|1), tax_number, company_number, legal_status",
                    "enum": [
                      "gender",
                      "first_name",
                      "last_name",
                      "email",
                      "phone",
                      "company",
                      "address",
                      "zip_code",
                      "city",
                      "state",
                      "country",
                      "display",
                      "other",
                      "default",
                      "tax_number",
                      "company_number",
                      "legal_status"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the address attribute"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product attribute successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customer/{customers_id}": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Returns details of a customers_id",
        "description": "Returns details of a customers_id<br />Scope for public applications : read_customers",
        "operationId": "api.customer.customers_id",
        "parameters": [
          {
            "name": "customers_id",
            "in": "path",
            "description": "customers_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "customers"
        ],
        "summary": "Delete a customer",
        "description": "Delete a customer<br />Scope for public applications : write_customers",
        "operationId": "api.customer.delete",
        "parameters": [
          {
            "name": "customers_id",
            "in": "path",
            "description": "customers_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customer/{customers_id}/products_solds/": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Returns products sold to a specific customers_id",
        "description": "Returns products sold to a specific customers_id (ORDER BY date_z DESC)<br />Scope for public applications : read_customers<br />Results per page : 250",
        "operationId": "api.customer.customers_id.products_solds",
        "parameters": [
          {
            "name": "customers_id",
            "in": "path",
            "description": "customers_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customer/{customers_id}/sales/": {
      "get": {
        "tags": [
          "customers"
        ],
        "summary": "Returns sales to a specific customers_id",
        "description": "Returns sales to a specific customers_id (ORDER BY sale_id DESC)<br />Scope for public applications : read_customers<br />Results per page : 250",
        "operationId": "api.customer.customers_id.sales",
        "parameters": [
          {
            "name": "customers_id",
            "in": "path",
            "description": "customers_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customer/{customers_id}/": {
      "put": {
        "tags": [
          "customers"
        ],
        "summary": "Update a customer",
        "description": "Update a customer<br />Scope for public applications : write_customers",
        "operationId": "api.customer.update",
        "parameters": [
          {
            "name": "customers_id",
            "in": "path",
            "description": "ID of the customer",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "customers_attribute"
                ],
                "type": "object",
                "properties": {
                  "customers_attribute": {
                    "type": "string",
                    "description": "One of the following customer attribute : gender (0:unknown|1:male|2:female), last_name, first_name, email, company, phone, vat, country, date_of_birth, customers_code, comments, intial_loyalty_points, validity, customers_id_referrer, accounting_account, customers_ref_ext, password, customers_misc",
                    "enum": [
                      "gender",
                      "last_name",
                      "first_name",
                      "email",
                      "company",
                      "phone",
                      "vat",
                      "country",
                      "date_of_birth",
                      "customers_code",
                      "comments",
                      "intial_loyalty_points",
                      "validity",
                      "customers_id_referrer",
                      "accounting_account",
                      "customers_ref_ext",
                      "password",
                      "customers_misc"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the customers_attribute"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "customers_attribute"
                ],
                "type": "object",
                "properties": {
                  "customers_attribute": {
                    "type": "string",
                    "description": "One of the following customer attribute : gender (0:unknown|1:male|2:female), last_name, first_name, email, company, phone, vat, country, date_of_birth, customers_code, comments, intial_loyalty_points, validity, customers_id_referrer, accounting_account, customers_ref_ext, password, customers_misc",
                    "enum": [
                      "gender",
                      "last_name",
                      "first_name",
                      "email",
                      "company",
                      "phone",
                      "vat",
                      "country",
                      "date_of_birth",
                      "customers_code",
                      "comments",
                      "intial_loyalty_points",
                      "validity",
                      "customers_id_referrer",
                      "accounting_account",
                      "customers_ref_ext",
                      "password",
                      "customers_misc"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the customers_attribute"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Customer successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers_credit/{customers_id}": {
      "get": {
        "tags": [
          "customers_credit"
        ],
        "summary": "Returns store credit lines for a customers_id",
        "description": "Returns store credit lines for a customers_id<br />Scope for public applications : read_store_credit<br />Results per page : 250",
        "operationId": "api.customers_credit.customers_id",
        "parameters": [
          {
            "name": "customers_id",
            "in": "path",
            "description": "customers_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customers store credit details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers_credit/": {
      "post": {
        "tags": [
          "customers_credit"
        ],
        "summary": "Add a store credit line to a customers_id",
        "description": "Add a store credit line to a customers_id<br />Scope for public applications : write_store_credit",
        "operationId": "api.customers_credit.add_line",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "amount",
                  "currency_code",
                  "customers_id",
                  "payment_type",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "Store ID",
                    "format": "int32"
                  },
                  "customers_id": {
                    "type": "integer",
                    "description": "customers_id",
                    "format": "int32"
                  },
                  "amount": {
                    "type": "number",
                    "description": "amount"
                  },
                  "currency_code": {
                    "type": "string",
                    "description": "Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
                  },
                  "payment_type": {
                    "type": "string",
                    "description": "payment_type"
                  },
                  "comments": {
                    "type": "string",
                    "description": "comments"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "amount",
                  "currency_code",
                  "customers_id",
                  "payment_type",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "Store ID",
                    "format": "int32"
                  },
                  "customers_id": {
                    "type": "integer",
                    "description": "customers_id",
                    "format": "int32"
                  },
                  "amount": {
                    "type": "number",
                    "description": "amount"
                  },
                  "currency_code": {
                    "type": "string",
                    "description": "Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
                  },
                  "payment_type": {
                    "type": "string",
                    "description": "payment_type"
                  },
                  "comments": {
                    "type": "string",
                    "description": "comments"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Credit line successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers_merge/": {
      "post": {
        "tags": [
          "customers"
        ],
        "summary": "Merge two customers accounts",
        "description": "Merge two customers accounts. customer_id_from must not have store credit neither prepaid purchases.<br />Scope for public applications : write_customers",
        "operationId": "api.customers_merge.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "customer_id_from",
                  "customer_id_to"
                ],
                "type": "object",
                "properties": {
                  "customer_id_from": {
                    "type": "integer",
                    "description": "Customer ID from (will be deleted after operation)",
                    "format": "int32"
                  },
                  "customer_id_to": {
                    "type": "integer",
                    "description": "Customer ID to",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "customer_id_from",
                  "customer_id_to"
                ],
                "type": "object",
                "properties": {
                  "customer_id_from": {
                    "type": "integer",
                    "description": "Customer ID from (will be deleted after operation)",
                    "format": "int32"
                  },
                  "customer_id_to": {
                    "type": "integer",
                    "description": "Customer ID to",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Customers successfully merged",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/tags/customers/": {
      "get": {
        "tags": [
          "customers",
          "tags"
        ],
        "summary": "Returns tags for customers",
        "description": "Returns tags for customers<br />Scope for public applications : read_customers",
        "operationId": "api.tags.customers",
        "responses": {
          "200": {
            "description": "Tags",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers_tags/{customer_id}": {
      "get": {
        "tags": [
          "customers",
          "tags"
        ],
        "summary": "Returns tags for a specific customer_id",
        "description": "Returns tags for a specific customer_id<br />Scope for public applications : read_customers",
        "operationId": "api.tags.customer_id",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "Customer ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag ID",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "customers",
          "tags"
        ],
        "summary": "Add a tag to a specific customer_id",
        "description": "Add a tag to a specific customer_id<br />Scope for public applications : write_customers",
        "operationId": "api.customers_tags.add",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "Customer ID for which you need to add a tag ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "tag_id"
                ],
                "type": "object",
                "properties": {
                  "tag_id": {
                    "type": "integer",
                    "description": "Tag ID that needs to be added",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "tag_id"
                ],
                "type": "object",
                "properties": {
                  "tag_id": {
                    "type": "integer",
                    "description": "Tag ID that needs to be added",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Tag successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers_tags/{customer_id}/{tag_id}": {
      "delete": {
        "tags": [
          "customers",
          "tags"
        ],
        "summary": "Delete a tag to a specific customer_id",
        "description": "Delete a tag to a specific customer_id<br />Scope for public applications : write_customers",
        "operationId": "api.customers_tags.delete",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "Customer ID for which you need to delete a tag ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tag_id",
            "in": "path",
            "description": "Tag ID that needs to be deleted. 0 to delete all tags",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/inventory_inputs/": {
      "get": {
        "tags": [
          "products",
          "inventory_inputs"
        ],
        "summary": "Returns the list of stock orders",
        "description": "Returns the list of stock orders<br />Scope for public applications : read_inventory<br />Results per page : 250",
        "operationId": "api.inventory_inputs.index",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory inputs",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "products",
          "inventory_inputs"
        ],
        "summary": "Create a stock order",
        "description": "Create a stock order<br />Scope for public applications : write_inventory",
        "operationId": "api.inventory_inputs.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "stock_id"
                ],
                "type": "object",
                "properties": {
                  "stock_id": {
                    "type": "integer",
                    "description": "Stock ID",
                    "format": "int32"
                  },
                  "supplier_id": {
                    "type": "integer",
                    "description": "Supplier ID",
                    "format": "int32"
                  },
                  "label": {
                    "type": "string",
                    "description": "Inventory input label"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "stock_id"
                ],
                "type": "object",
                "properties": {
                  "stock_id": {
                    "type": "integer",
                    "description": "Stock ID",
                    "format": "int32"
                  },
                  "supplier_id": {
                    "type": "integer",
                    "description": "Supplier ID",
                    "format": "int32"
                  },
                  "label": {
                    "type": "string",
                    "description": "Inventory input label"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Customers address successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/inventory_inputs/{inventory_input_id}": {
      "get": {
        "tags": [
          "products",
          "inventory_inputs"
        ],
        "summary": "Returns details of a stock order",
        "description": "Returns details of a stock order<br />Scope for public applications : read_inventory",
        "operationId": "api.inventory_inputs_info.index",
        "parameters": [
          {
            "name": "inventory_input_id",
            "in": "path",
            "description": "inventory_input_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory input details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/inventory_input_details/{inventory_input_id}": {
      "get": {
        "tags": [
          "products",
          "inventory_inputs"
        ],
        "summary": "Returns details for a stock order",
        "description": "Returns details for a stock order<br />Scope for public applications : read_inventory",
        "operationId": "api.inventory_input_details.index",
        "parameters": [
          {
            "name": "inventory_input_id",
            "in": "path",
            "description": "Inventory input ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory input details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "products",
          "inventory_inputs"
        ],
        "summary": "Add a product line to a stock order",
        "description": "Add a product line to a stock order<br />Scope for public applications : write_inventory",
        "operationId": "api.inventory_input_details.add_product",
        "parameters": [
          {
            "name": "inventory_input_id",
            "in": "path",
            "description": "Inventory_input ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "product_id",
                  "product_size"
                ],
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "integer",
                    "description": "Product ID you need to add to inventory_input_id",
                    "format": "int32"
                  },
                  "product_size": {
                    "type": "integer",
                    "description": "Product size you need to add to inventory_input_id",
                    "format": "int32"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity (if empty value is 1)",
                    "format": "int32"
                  },
                  "product_price": {
                    "type": "integer",
                    "description": "Product supply price (if empty value will be supply price)",
                    "format": "int32"
                  },
                  "product_serial_number": {
                    "type": "integer",
                    "description": "Product serial number",
                    "format": "int32"
                  },
                  "peremption_date": {
                    "type": "integer",
                    "description": "Peremption date",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "product_id",
                  "product_size"
                ],
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "integer",
                    "description": "Product ID you need to add to inventory_input_id",
                    "format": "int32"
                  },
                  "product_size": {
                    "type": "integer",
                    "description": "Product size you need to add to inventory_input_id",
                    "format": "int32"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity (if empty value is 1)",
                    "format": "int32"
                  },
                  "product_price": {
                    "type": "integer",
                    "description": "Product supply price (if empty value will be supply price)",
                    "format": "int32"
                  },
                  "product_serial_number": {
                    "type": "integer",
                    "description": "Product serial number",
                    "format": "int32"
                  },
                  "peremption_date": {
                    "type": "integer",
                    "description": "Peremption date",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Product successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/inventory_input_details/{inventory_input_detail_id}/": {
      "put": {
        "tags": [
          "products",
          "inventory_inputs"
        ],
        "summary": "Update an inventory_input_detail_id",
        "description": "Update an inventory_input_detail_id<br />Scope for public applications : write_inventory",
        "operationId": "api.inventory_input_detail_id.update",
        "parameters": [
          {
            "name": "inventory_input_detail_id",
            "in": "path",
            "description": "inventory_input_detail_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "inventory_input_detail_id_attribute"
                ],
                "type": "object",
                "properties": {
                  "inventory_input_detail_id_attribute": {
                    "type": "string",
                    "description": "One of the following sale attribute : product_serial_number, product_price, quantity, peremption_date",
                    "enum": [
                      "product_serial_number",
                      "product_price",
                      "quantity",
                      "peremption_date"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the inventory_input_detail_id attribute"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "inventory_input_detail_id_attribute"
                ],
                "type": "object",
                "properties": {
                  "inventory_input_detail_id_attribute": {
                    "type": "string",
                    "description": "One of the following sale attribute : product_serial_number, product_price, quantity, peremption_date",
                    "enum": [
                      "product_serial_number",
                      "product_price",
                      "quantity",
                      "peremption_date"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the inventory_input_detail_id attribute"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Inventory input detail attribute successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/inventory_input_validate/": {
      "post": {
        "tags": [
          "products",
          "inventory_inputs"
        ],
        "summary": "Validate a stock order",
        "description": "Validate a stock order<br />Scope for public applications : write_inventory",
        "operationId": "api.inventory_input.validate",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "inventory_input_id"
                ],
                "type": "object",
                "properties": {
                  "inventory_input_id": {
                    "type": "integer",
                    "description": "Inventory input ID",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "inventory_input_id"
                ],
                "type": "object",
                "properties": {
                  "inventory_input_id": {
                    "type": "integer",
                    "description": "Inventory input ID",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Stock order successfully validated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/inventory_inputs_on_hold/": {
      "get": {
        "tags": [
          "products",
          "inventory_inputs"
        ],
        "summary": "Returns the list of stock orders details on hold",
        "description": "Returns the list of stock orders details on hold<br />Scope for public applications : read_inventory<br />Results per page : 250",
        "operationId": "api.inventory_inputs_on_hold.index",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory inputs details on hold",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/kitchen/open_tables": {
      "get": {
        "tags": [
          "kitchen"
        ],
        "summary": "Returns pending sales sent to kitchen",
        "description": "Returns pending sales sent to kitchen<br />Scope for public applications : read_kitchen_screen",
        "operationId": "api.kitchen.open_tables",
        "responses": {
          "200": {
            "description": "Pending open tables",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/kitchen/cooking_stations": {
      "get": {
        "tags": [
          "kitchen"
        ],
        "summary": "Returns cooking stations",
        "description": "Returns cooking stations<br />Scope for public applications : read_kitchen_screen",
        "operationId": "api.kitchen.cooking_stations",
        "responses": {
          "200": {
            "description": "cooking stations",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/kitchen/sales/{sale_id}": {
      "get": {
        "tags": [
          "kitchen"
        ],
        "summary": "Returns sale details",
        "description": "Returns sale details<br />Scope for public applications : read_kitchen_screen",
        "operationId": "api.kitchen.sale_details",
        "parameters": [
          {
            "name": "sale_id",
            "in": "path",
            "description": "sale_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sale details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/kitchen/line_item": {
      "post": {
        "tags": [
          "kitchen"
        ],
        "summary": "Add item to the kitchen screen",
        "description": "Add item to the kitchen screen<br />Scope for public applications : write_kitchen_screen",
        "operationId": "api.kitchen.add_line_item",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "item_id"
                ],
                "type": "object",
                "properties": {
                  "item_id": {
                    "type": "integer",
                    "description": "item_id",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "item_id"
                ],
                "type": "object",
                "properties": {
                  "item_id": {
                    "type": "integer",
                    "description": "item_id",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Item successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/kitchen/line_items": {
      "post": {
        "tags": [
          "kitchen"
        ],
        "summary": "Add sale items to the kitchen screen",
        "description": "Add item to the kitchen screen<br />Scope for public applications : write_kitchen_screen",
        "operationId": "api.kitchen.add_line_items",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "sale_id",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "sale_id",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sale is empty | Items successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/kitchen/item_status": {
      "post": {
        "tags": [
          "kitchen"
        ],
        "summary": "Update item status",
        "description": "Update item status<br />Scope for public applications : write_kitchen_screen",
        "operationId": "api.kitchen.update_item_status",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "item_id",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "item_id": {
                    "type": "integer",
                    "description": "item_id",
                    "format": "int32"
                  },
                  "status": {
                    "type": "integer",
                    "description": "status (0|1|2)",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "item_id",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "item_id": {
                    "type": "integer",
                    "description": "item_id",
                    "format": "int32"
                  },
                  "status": {
                    "type": "integer",
                    "description": "status (0|1|2)",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Item status successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/kitchen/sales/{sale_id}/": {
      "delete": {
        "tags": [
          "kitchen"
        ],
        "summary": "Delete a sale from the kitchen screen",
        "description": "Delete a sale from the kitchen screen<br />Scope for public applications : write_kitchen_screen",
        "operationId": "api.kitchen.delete_sale",
        "parameters": [
          {
            "name": "sale_id",
            "in": "path",
            "description": "Sale id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sale successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/message/": {
      "post": {
        "tags": [
          "message"
        ],
        "summary": "Post a new message",
        "description": "Post a new message",
        "operationId": "api.message.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "object",
                  "store_id",
                  "thread"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "store_id",
                    "format": "int32"
                  },
                  "thread": {
                    "type": "string",
                    "description": "One of the following types : notifications",
                    "enum": [
                      "notifications"
                    ]
                  },
                  "object": {
                    "type": "string",
                    "description": "One of the following objects : none (default), sale, product, client, planning",
                    "enum": [
                      "none",
                      "sale",
                      "product",
                      "client",
                      "planning"
                    ]
                  },
                  "object_id": {
                    "type": "integer",
                    "description": "sale_id or product_id",
                    "format": "int32"
                  },
                  "title": {
                    "type": "string",
                    "description": "title"
                  },
                  "message": {
                    "type": "string",
                    "description": "message"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "object",
                  "store_id",
                  "thread"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "store_id",
                    "format": "int32"
                  },
                  "thread": {
                    "type": "string",
                    "description": "One of the following types : notifications",
                    "enum": [
                      "notifications"
                    ]
                  },
                  "object": {
                    "type": "string",
                    "description": "One of the following objects : none (default), sale, product, client, planning",
                    "enum": [
                      "none",
                      "sale",
                      "product",
                      "client",
                      "planning"
                    ]
                  },
                  "object_id": {
                    "type": "integer",
                    "description": "sale_id or product_id",
                    "format": "int32"
                  },
                  "title": {
                    "type": "string",
                    "description": "title"
                  },
                  "message": {
                    "type": "string",
                    "description": "message"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Message successfully sent",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/modifiers/": {
      "get": {
        "tags": [
          "modifiers"
        ],
        "summary": "Returns the list of modifiers",
        "description": "Returns modifiers<br />Scope for public applications : read_products",
        "operationId": "api.modifiers.index",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modifiers",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "modifiers"
        ],
        "summary": "Create a modifier",
        "description": "Create a modifier<br />Scope for public applications : write_products",
        "operationId": "api.modifiers.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifier_label": {
                    "type": "string",
                    "description": "Name of the modifier"
                  },
                  "modifier_group_id": {
                    "type": "integer",
                    "description": "Modifier group ID to which the modifer belongs to. If 0 the modifier is created as a modifier group ",
                    "format": "int32"
                  },
                  "modifier_enabled": {
                    "type": "integer",
                    "description": "Enabled ? 0|1 (default:1)",
                    "format": "int32"
                  },
                  "modifier_enabled_www": {
                    "type": "integer",
                    "description": "Enabled for web ? 0|1 (default:0)",
                    "format": "int32"
                  },
                  "modifier_required": {
                    "type": "integer",
                    "description": "Required ? 0|1 (default:0) / Only if modifier_group_id == 0",
                    "format": "int32"
                  },
                  "modifier_price": {
                    "type": "string",
                    "description": "Price / Only if modifier_group_id <> 0"
                  },
                  "modifier_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "modifier_label": {
                    "type": "string",
                    "description": "Name of the modifier"
                  },
                  "modifier_group_id": {
                    "type": "integer",
                    "description": "Modifier group ID to which the modifer belongs to. If 0 the modifier is created as a modifier group ",
                    "format": "int32"
                  },
                  "modifier_enabled": {
                    "type": "integer",
                    "description": "Enabled ? 0|1 (default:1)",
                    "format": "int32"
                  },
                  "modifier_enabled_www": {
                    "type": "integer",
                    "description": "Enabled for web ? 0|1 (default:0)",
                    "format": "int32"
                  },
                  "modifier_required": {
                    "type": "integer",
                    "description": "Required ? 0|1 (default:0) / Only if modifier_group_id == 0",
                    "format": "int32"
                  },
                  "modifier_price": {
                    "type": "string",
                    "description": "Price / Only if modifier_group_id <> 0"
                  },
                  "modifier_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Modifier successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/modifiers/{modifier_id}/": {
      "put": {
        "tags": [
          "modifiers"
        ],
        "summary": "Update a modifier",
        "description": "Update a modifier<br />Scope for public applications : write_products",
        "operationId": "api.modifiers.update",
        "parameters": [
          {
            "name": "modifier_id",
            "in": "path",
            "description": "ID of the modifier",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "modifier_attribute"
                ],
                "type": "object",
                "properties": {
                  "modifier_attribute": {
                    "type": "string",
                    "description": "One of the following modifier attribute : modifier_label, modifier_group_id, modifier_enabled (0|1), modifier_enabled_www (0|1), modifier_required (0|1), modifier_price, modifier_ref_ext",
                    "enum": [
                      "modifier_label",
                      "modifier_group_id",
                      "modifier_enabled",
                      "modifier_enabled_www",
                      "modifier_required",
                      "modifier_price",
                      "modifier_ref_ext"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the modifier_attribute"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "modifier_attribute"
                ],
                "type": "object",
                "properties": {
                  "modifier_attribute": {
                    "type": "string",
                    "description": "One of the following modifier attribute : modifier_label, modifier_group_id, modifier_enabled (0|1), modifier_enabled_www (0|1), modifier_required (0|1), modifier_price, modifier_ref_ext",
                    "enum": [
                      "modifier_label",
                      "modifier_group_id",
                      "modifier_enabled",
                      "modifier_enabled_www",
                      "modifier_required",
                      "modifier_price",
                      "modifier_ref_ext"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the modifier_attribute"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Modifier successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/payment_types/{store_id}/": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Returns payment types for store_id",
        "description": "Returns payment types for store_id<br />Scope for public applications : read_settings",
        "operationId": "api.payment_types.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment types",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/payment_types/": {
      "put": {
        "tags": [
          "payments"
        ],
        "summary": "Update a payment_type",
        "description": "Update a payment_type<br />Scope for public applications : write_settings",
        "operationId": "api.payment_type.update",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "currency",
                  "payment_type",
                  "payment_type_attribute",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "Store ID",
                    "format": "int32"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Currency"
                  },
                  "payment_type": {
                    "type": "string",
                    "description": "payment_type"
                  },
                  "payment_type_attribute": {
                    "type": "string",
                    "description": "One of the following payment_type attribute : open_drawer (0 OR 1), enabled (0 OR 1), accounting_account",
                    "enum": [
                      "open_drawer",
                      "enabled",
                      "accounting_account"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the payment_type"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "currency",
                  "payment_type",
                  "payment_type_attribute",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "Store ID",
                    "format": "int32"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Currency"
                  },
                  "payment_type": {
                    "type": "string",
                    "description": "payment_type"
                  },
                  "payment_type_attribute": {
                    "type": "string",
                    "description": "One of the following payment_type attribute : open_drawer (0 OR 1), enabled (0 OR 1), accounting_account",
                    "enum": [
                      "open_drawer",
                      "enabled",
                      "accounting_account"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the payment_type"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Payment type successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Add a payment type",
        "description": "Add a payment_types<br />Scope for public applications : write_settings",
        "operationId": "api.payment_types.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "currency",
                  "payment_type",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "Store ID",
                    "format": "int32"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
                  },
                  "payment_type": {
                    "type": "string",
                    "description": "Minimum 2 uppercase chars, maximum 5, no spaces, no special chars. UTF8 only --> ^[A-Z]{2,5}$"
                  },
                  "open_drawer": {
                    "type": "integer",
                    "description": "If the drawer should open. If empty, default value is 0.",
                    "format": "int32",
                    "enum": [
                      "0",
                      "1"
                    ]
                  },
                  "enabled": {
                    "type": "integer",
                    "description": "Enable. If empty, default value is 1.",
                    "format": "int32",
                    "enum": [
                      "0",
                      "1"
                    ]
                  },
                  "accounting_account": {
                    "type": "string",
                    "description": "Accounting Account"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "currency",
                  "payment_type",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "Store ID",
                    "format": "int32"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
                  },
                  "payment_type": {
                    "type": "string",
                    "description": "Minimum 2 uppercase chars, maximum 5, no spaces, no special chars. UTF8 only --> ^[A-Z]{2,5}$"
                  },
                  "open_drawer": {
                    "type": "integer",
                    "description": "If the drawer should open. If empty, default value is 0.",
                    "format": "int32",
                    "enum": [
                      "0",
                      "1"
                    ]
                  },
                  "enabled": {
                    "type": "integer",
                    "description": "Enable. If empty, default value is 1.",
                    "format": "int32",
                    "enum": [
                      "0",
                      "1"
                    ]
                  },
                  "accounting_account": {
                    "type": "string",
                    "description": "Accounting Account"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Payment type successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized action",
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "content": {}
          }
        }
      }
    },
    "/payments/due_date/{store_id}/": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Returns the list of payments with due dates for a specific store_id",
        "description": "Returns the list of payments with due dates for a specific store_id<br />Scope for public applications : read_sales<br />Results per page : 250",
        "operationId": "api.payments_due_date.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment types",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/prepaid_purchases/": {
      "get": {
        "tags": [
          "prepaid_purchases"
        ],
        "summary": "Returns prepaid purchases lines",
        "description": "Returns prepaid purchases lines<br />Scope for public applications : read_customers<br />Results per page : 250",
        "operationId": "api.prepaid_purchases.index",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Prepaid purchases details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "prepaid_purchases"
        ],
        "summary": "Add a prepaid purchase line to a customers_id",
        "description": "Add a prepaid purchase line to a customers_id<br />Scope for public applications : write_customers",
        "operationId": "api.prepaid_purchases.add_line",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "amount",
                  "currency_code",
                  "customers_id",
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "customers_id": {
                    "type": "integer",
                    "description": "customers_id",
                    "format": "int32"
                  },
                  "sale_id": {
                    "type": "number",
                    "description": "sale_id"
                  },
                  "amount": {
                    "type": "number",
                    "description": "amount"
                  },
                  "currency_code": {
                    "type": "string",
                    "description": "Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
                  },
                  "comments": {
                    "type": "string",
                    "description": "comments"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "amount",
                  "currency_code",
                  "customers_id",
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "customers_id": {
                    "type": "integer",
                    "description": "customers_id",
                    "format": "int32"
                  },
                  "sale_id": {
                    "type": "number",
                    "description": "sale_id"
                  },
                  "amount": {
                    "type": "number",
                    "description": "amount"
                  },
                  "currency_code": {
                    "type": "string",
                    "description": "Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
                  },
                  "comments": {
                    "type": "string",
                    "description": "comments"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Prepaid purchase line successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/prepaid_purchases/{customers_id}": {
      "get": {
        "tags": [
          "prepaid_purchases"
        ],
        "summary": "Returns prepaid purchases lines for a customers_id",
        "description": "Returns prepaid purchases lines for a customers_id<br />Scope for public applications : read_customers<br />Results per page : 250",
        "operationId": "api.prepaid_purchases.customers_id",
        "parameters": [
          {
            "name": "customers_id",
            "in": "path",
            "description": "customers_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customers prepaid purchases details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/print/misc/": {
      "post": {
        "tags": [
          "print"
        ],
        "summary": "Print a document",
        "description": "Print a document<br />Scope for public applications : print<br /><br />In order to be able to print with this method you need to :<br />- On Hiboutik in 'General Settings' set the public IP address of your point of sale. You can use a DYN DNS service if you don't have a public static IP address. <br />- Set a port forwarding on you router from the port of your choice (the one you will fill below) to the port 9100 on your local printer",
        "operationId": "api.print.misc",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "Store ID",
                    "format": "int32"
                  },
                  "ip_address": {
                    "type": "string",
                    "description": "IP address - Leave blank for default"
                  },
                  "port": {
                    "type": "integer",
                    "description": "Port number - Leave blank for default",
                    "format": "int32"
                  },
                  "printer": {
                    "type": "string",
                    "description": "One of the following : receipt, kitchen, label. If empty default is receipt"
                  },
                  "data": {
                    "type": "string",
                    "description": "The data to print"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "Store ID",
                    "format": "int32"
                  },
                  "ip_address": {
                    "type": "string",
                    "description": "IP address - Leave blank for default"
                  },
                  "port": {
                    "type": "integer",
                    "description": "Port number - Leave blank for default",
                    "format": "int32"
                  },
                  "printer": {
                    "type": "string",
                    "description": "One of the following : receipt, kitchen, label. If empty default is receipt"
                  },
                  "data": {
                    "type": "string",
                    "description": "The data to print"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Document successfully printed",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Returns products by ID",
        "description": "Returns products (default sorting is by ID DESC)<br />Scope for public applications : read_products<br />Results per page : 250",
        "operationId": "api.products.index",
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order by",
            "schema": {
              "type": "string",
              "enum": [
                "product_id",
                "product_model",
                "product_price",
                "product_supply_price",
                "product_size_type",
                "product_display",
                "product_display_www",
                "product_arch",
                "updated_at",
                "product_order"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort",
            "schema": {
              "type": "string",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products overview",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/product"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Create a new product",
        "description": "Create a new product<br />Scope for public applications : write_products<br />Returns <strong>product_id</strong>",
        "operationId": "api.products.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_model": {
                    "type": "string",
                    "description": "product_model"
                  },
                  "product_barcode": {
                    "type": "string",
                    "description": "product_barcode"
                  },
                  "product_brand": {
                    "type": "integer",
                    "description": "ANDproduct_brand",
                    "format": "int32"
                  },
                  "product_supplier": {
                    "type": "integer",
                    "description": "product_supplier",
                    "format": "int32"
                  },
                  "product_price": {
                    "type": "string",
                    "description": "product_price"
                  },
                  "product_discount_price": {
                    "type": "string",
                    "description": "product_discount_price"
                  },
                  "product_supply_price": {
                    "type": "string",
                    "description": "product_supply_price"
                  },
                  "product_category": {
                    "type": "integer",
                    "description": "product_category",
                    "format": "int32"
                  },
                  "product_size_type": {
                    "type": "integer",
                    "description": "product_size_type",
                    "format": "int32"
                  },
                  "product_stock_management": {
                    "type": "integer",
                    "description": "product_stock_management",
                    "format": "int32"
                  },
                  "product_supplier_reference": {
                    "type": "string",
                    "description": "product_supplier_reference"
                  },
                  "product_package": {
                    "type": "integer",
                    "description": "product_package",
                    "format": "int32"
                  },
                  "product_vat": {
                    "type": "integer",
                    "description": "product_vat",
                    "format": "int32"
                  },
                  "products_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "product_model": {
                    "type": "string",
                    "description": "product_model"
                  },
                  "product_barcode": {
                    "type": "string",
                    "description": "product_barcode"
                  },
                  "product_brand": {
                    "type": "integer",
                    "description": "ANDproduct_brand",
                    "format": "int32"
                  },
                  "product_supplier": {
                    "type": "integer",
                    "description": "product_supplier",
                    "format": "int32"
                  },
                  "product_price": {
                    "type": "string",
                    "description": "product_price"
                  },
                  "product_discount_price": {
                    "type": "string",
                    "description": "product_discount_price"
                  },
                  "product_supply_price": {
                    "type": "string",
                    "description": "product_supply_price"
                  },
                  "product_category": {
                    "type": "integer",
                    "description": "product_category",
                    "format": "int32"
                  },
                  "product_size_type": {
                    "type": "integer",
                    "description": "product_size_type",
                    "format": "int32"
                  },
                  "product_stock_management": {
                    "type": "integer",
                    "description": "product_stock_management",
                    "format": "int32"
                  },
                  "product_supplier_reference": {
                    "type": "string",
                    "description": "product_supplier_reference"
                  },
                  "product_package": {
                    "type": "integer",
                    "description": "product_package",
                    "format": "int32"
                  },
                  "product_vat": {
                    "type": "integer",
                    "description": "product_vat",
                    "format": "int32"
                  },
                  "products_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product successfully created",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products_images/{product_id}/": {
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Add a product image",
        "description": "Add a product image<br />Scope for public applications : write_products",
        "operationId": "api.products_images.add",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "image"
                ],
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "description": "Image of the product. You must provide a valid square .jpeg or .jpg image file, no bigger than 1Mb. Final image will be resized to 100x100px.",
                    "format": "binary"
                  },
                  "framing_type": {
                    "type": "string",
                    "description": "One of the following line_item attribute : default, center_zoom or frame",
                    "enum": [
                      "default",
                      "center_zoom",
                      "frame"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product image successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products_images_1000x1000/{product_id}/": {
      "post": {
        "tags": [
          "products"
        ],
        "summary": "Add a product image",
        "description": "Add a product image<br />Scope for public applications : write_products",
        "operationId": "api.products_images_1000x1000.add",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "image"
                ],
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "description": "Image of the product. You must provide a valid square .jpeg or .jpg image file, no bigger than 1Mb. Final image will be resized to 1000x1000px.",
                    "format": "binary"
                  },
                  "framing_type": {
                    "type": "string",
                    "description": "One of the following framing type : default, center_zoom or frame",
                    "enum": [
                      "default",
                      "center_zoom",
                      "frame"
                    ]
                  },
                  "image_id": {
                    "type": "string",
                    "description": "You can upload up to 4 images",
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product image successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products_barcode/{store_id}/{product_id}/{size_id}/": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Returns product barcode for a store_id & product_id & size_id",
        "description": "Returns product barcode for a store_id & product_id & size_id<br />Scope for public applications : read_products",
        "operationId": "api.products_barcode.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "size_id",
            "in": "path",
            "description": "size_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product barcode for a store_id & product_id & size_id",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products_sold/{store_id}/{year}/{month}/{day}/": {
      "get": {
        "tags": [
          "products",
          "sales"
        ],
        "summary": "Returns products sold in a store_id at a specific date",
        "description": "Returns products sold in a store_id at a specific date<br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.products_sold.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "customer_id",
            "in": "query",
            "description": "customer_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendor_id",
            "in": "query",
            "description": "vendor_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products solds",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products_purchased/{warehouse_id}/{year}/{month}/{day}/": {
      "get": {
        "tags": [
          "products",
          "inventory_inputs"
        ],
        "summary": "Returns products purchased in a warehouse_id at a specific date",
        "description": "Returns products purchased in a warehouse_id at a specific date<br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.products_purchased.index",
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "path",
            "description": "warehouse_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products purchased",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/product_purchased_history/{product_id}/": {
      "get": {
        "tags": [
          "products",
          "inventory_inputs"
        ],
        "summary": "Returns product purchased history for a specific product_id",
        "description": "Returns product purchased history for a specific product_id<br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.product_purchased_history.index",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product purchased history",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products_returned/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Returns product returned for store_id for a specific day",
        "description": "Returns product returned for store_id for a specific day<br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.products_returned.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report of products returned",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/product/{product_id}/": {
      "put": {
        "tags": [
          "products"
        ],
        "summary": "Update a product",
        "description": "Update a product<br />Scope for public applications : write_products",
        "operationId": "api.product.update",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "product_attribute"
                ],
                "type": "object",
                "properties": {
                  "size_id": {
                    "type": "integer",
                    "description": "size_id",
                    "format": "int32"
                  },
                  "shop_id": {
                    "type": "integer",
                    "description": "shop_id",
                    "format": "int32"
                  },
                  "product_attribute": {
                    "type": "string",
                    "description": "One of the following product attribute : product_model, product_barcode, product_brand, product_supplier, product_price, product_discount_price, product_supply_price, points_in, points_out, product_category, product_stock_management, product_supplier_reference, product_vat, product_display, product_display_www, product_font_color, product_bck_btn_color, product_arch, product_desc, product_storage_location, products_ref_ext, product_size_type, accounting_account, misc_date, misc_decimal, misc_int, misc_varchar, misc_varchar2, misc_text, multiple, weight",
                    "enum": [
                      "product_model",
                      "product_barcode",
                      "product_brand",
                      "product_supplier",
                      "product_price",
                      "product_discount_price",
                      "product_supply_price",
                      "points_in",
                      "points_out",
                      "product_category",
                      "product_stock_management",
                      "product_supplier_reference",
                      "product_vat",
                      "product_display",
                      "product_display_www",
                      "product_font_color",
                      "product_bck_btn_color",
                      "product_arch",
                      "product_desc",
                      "product_storage_location",
                      "products_ref_ext",
                      "product_size_type",
                      "accounting_account",
                      "misc_date",
                      "misc_decimal",
                      "misc_int",
                      "misc_varchar",
                      "misc_varchar2",
                      "misc_text",
                      "multiple",
                      "weight"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the product attribute"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "product_attribute"
                ],
                "type": "object",
                "properties": {
                  "size_id": {
                    "type": "integer",
                    "description": "size_id",
                    "format": "int32"
                  },
                  "shop_id": {
                    "type": "integer",
                    "description": "shop_id",
                    "format": "int32"
                  },
                  "product_attribute": {
                    "type": "string",
                    "description": "One of the following product attribute : product_model, product_barcode, product_brand, product_supplier, product_price, product_discount_price, product_supply_price, points_in, points_out, product_category, product_stock_management, product_supplier_reference, product_vat, product_display, product_display_www, product_font_color, product_bck_btn_color, product_arch, product_desc, product_storage_location, products_ref_ext, product_size_type, accounting_account, misc_date, misc_decimal, misc_int, misc_varchar, misc_varchar2, misc_text, multiple, weight",
                    "enum": [
                      "product_model",
                      "product_barcode",
                      "product_brand",
                      "product_supplier",
                      "product_price",
                      "product_discount_price",
                      "product_supply_price",
                      "points_in",
                      "points_out",
                      "product_category",
                      "product_stock_management",
                      "product_supplier_reference",
                      "product_vat",
                      "product_display",
                      "product_display_www",
                      "product_font_color",
                      "product_bck_btn_color",
                      "product_arch",
                      "product_desc",
                      "product_storage_location",
                      "products_ref_ext",
                      "product_size_type",
                      "accounting_account",
                      "misc_date",
                      "misc_decimal",
                      "misc_int",
                      "misc_varchar",
                      "misc_varchar2",
                      "misc_text",
                      "multiple",
                      "weight"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the product attribute"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product attribute successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/{product_id}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Returns product details",
        "description": "Returns product details<br />Scope for public applications : read_products",
        "operationId": "api.products.id",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/search/name/{q}": {
      "get": {
        "tags": [
          "products",
          "search"
        ],
        "summary": "Returns products search results by name",
        "description": "Returns products search results by name<br />Scope for public applications : read_products<br />Results per page : 250",
        "operationId": "api.products.name.search",
        "parameters": [
          {
            "name": "q",
            "in": "path",
            "description": "Search value",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/search/barcode/{q}/": {
      "get": {
        "tags": [
          "products",
          "search"
        ],
        "summary": "Returns products search results by barcode",
        "description": "Returns products search results by barcode<br />Scope for public applications : read_products",
        "operationId": "api.products.barcode.search",
        "parameters": [
          {
            "name": "q",
            "in": "path",
            "description": "Search value",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/search/supplier_reference/{q}/": {
      "get": {
        "tags": [
          "products",
          "search"
        ],
        "summary": "Returns products search results by supplier reference",
        "description": "Returns products search results by supplier reference<br />Scope for public applications : read_products",
        "operationId": "api.products.supplier_reference.search",
        "parameters": [
          {
            "name": "q",
            "in": "path",
            "description": "Search value",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/search/category/{category_id}": {
      "get": {
        "tags": [
          "products",
          "categories",
          "search"
        ],
        "summary": "Returns products search results by category_id",
        "description": "Returns products search results by category_id<br />Scope for public applications : read_products<br />Results per page : 250",
        "operationId": "api.products.category_id.search",
        "parameters": [
          {
            "name": "category_id",
            "in": "path",
            "description": "Cadegory ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/search/taxes/{tax_id}": {
      "get": {
        "tags": [
          "products",
          "taxes",
          "search"
        ],
        "summary": "Returns products search results by tax_id",
        "description": "Returns products search results by tax_id<br />Scope for public applications : read_products<br />Results per page : 250",
        "operationId": "api.products.tax_id.search",
        "parameters": [
          {
            "name": "tax_id",
            "in": "path",
            "description": "Tax ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/search/tags/{tag_id}": {
      "get": {
        "tags": [
          "products",
          "search"
        ],
        "summary": "Returns products search results by tag_id",
        "description": "Returns products search results by tag_id<br />Scope for public applications : read_products<br />Results per page : 250",
        "operationId": "api.products.tag_id.search",
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "description": "Tag ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/search/open_packages": {
      "get": {
        "tags": [
          "products",
          "search"
        ],
        "summary": "Returns open package products",
        "description": "Returns open package products<br />Scope for public applications : read_products<br />Results per page : 250",
        "operationId": "api.products.open_packages.search",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/product_specific_rules/{shop_id}/{product_id}/{size_id}": {
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "Delete a product specific rule",
        "description": "Delete a product specific rule<br />Scope for public applications : write_products",
        "operationId": "api.product_specific_rules.delete",
        "parameters": [
          {
            "name": "shop_id",
            "in": "path",
            "description": "Shop ID for which you need to delete the product specific rule or 0 for all shops",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_id",
            "in": "path",
            "description": "Product ID for which you need to delete the product specific rule or 0 for all products",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "size_id",
            "in": "path",
            "description": "Size ID for which you need to delete the product specific rule or 999 for all sizes",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products_images/{image_name}": {
      "delete": {
        "tags": [
          "products"
        ],
        "summary": "Delete a product image",
        "description": "Delete a product image<br />Scope for public applications : write_products",
        "operationId": "api.product_images.delete",
        "parameters": [
          {
            "name": "image_name",
            "in": "path",
            "description": "Image name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Image successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products_modifiers/{product_id}": {
      "get": {
        "tags": [
          "products",
          "modifiers"
        ],
        "summary": "Returns modifiers for a specific product_id",
        "description": "Returns modifiers for a specific product_id<br />Scope for public applications : read_products",
        "operationId": "api.modifiers.product_id",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modifier ID & label",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "products",
          "modifiers"
        ],
        "summary": "Add a modifier to a specific product_id",
        "description": "Add a modifier to a specific product_id<br />Scope for public applications : write_products",
        "operationId": "api.products_modifiers.add",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "Product ID for which you need to add a modifier ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "modifier_id"
                ],
                "type": "object",
                "properties": {
                  "modifier_id": {
                    "type": "integer",
                    "description": "Modifier ID that needs to be added",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "modifier_id"
                ],
                "type": "object",
                "properties": {
                  "modifier_id": {
                    "type": "integer",
                    "description": "Modifier ID that needs to be added",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Modifier successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products_modifiers/": {
      "get": {
        "tags": [
          "products",
          "modifiers"
        ],
        "summary": "Returns modifiers for products",
        "description": "Returns modifiers products<br />Scope for public applications : read_products",
        "operationId": "api.modifiers.products.index",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modifier ID & label",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products_modifiers/{product_id}/{modifier_id}": {
      "delete": {
        "tags": [
          "products",
          "modifiers"
        ],
        "summary": "Delete a modifier to a specific product_id",
        "description": "Delete a modifier to a specific product_id<br />Scope for public applications : write_products",
        "operationId": "api.products_modifiers.delete",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "Product ID for which you need to delete a modifier ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "modifier_id",
            "in": "path",
            "description": "Modifier ID that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modifier successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/tags/products/": {
      "get": {
        "tags": [
          "products",
          "tags",
          "Product tags"
        ],
        "summary": "Returns product tags",
        "description": "Returns product tags<br />Scope for public applications : read_products",
        "operationId": "api.tags.products",
        "responses": {
          "200": {
            "description": "Tags",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "products",
          "tags",
          "Product tags"
        ],
        "summary": "Update a product tag",
        "description": "Update a product tag<br />Scope for public applications : write_products",
        "operationId": "api.suppliers.update",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "tag_attribute",
                  "tag_id"
                ],
                "type": "object",
                "properties": {
                  "tag_id": {
                    "type": "integer",
                    "description": "Tag ID of the product tag that needs to be updated",
                    "format": "int32"
                  },
                  "tag_attribute": {
                    "type": "string",
                    "description": "One of the following tag attribute : tag_label, tag_desc, tag_enabled, tag_enabled_www",
                    "enum": [
                      "tag_label",
                      "tag_desc",
                      "tag_enabled",
                      "tag_enabled_www"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the tag attribute"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "tag_attribute",
                  "tag_id"
                ],
                "type": "object",
                "properties": {
                  "tag_id": {
                    "type": "integer",
                    "description": "Tag ID of the product tag that needs to be updated",
                    "format": "int32"
                  },
                  "tag_attribute": {
                    "type": "string",
                    "description": "One of the following tag attribute : tag_label, tag_desc, tag_enabled, tag_enabled_www",
                    "enum": [
                      "tag_label",
                      "tag_desc",
                      "tag_enabled",
                      "tag_enabled_www"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the tag attribute"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product tag successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "products",
          "tags",
          "Product tags"
        ],
        "summary": "Add a product tag",
        "description": "Add a product tag<br />Scope for public applications : write_products",
        "operationId": "api.add.tags.products",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "tag_label": {
                    "type": "string",
                    "description": "Tag label / Tag category label"
                  },
                  "tag_desc": {
                    "type": "string",
                    "description": "Tag description / Tag category description"
                  },
                  "tag_cat_id": {
                    "type": "integer",
                    "description": "Default 0 for a category else the category id the tag belongs to",
                    "format": "int32"
                  },
                  "tag_enabled": {
                    "type": "integer",
                    "description": "Enable (0|1)",
                    "format": "int32"
                  },
                  "tag_enabled_www": {
                    "type": "integer",
                    "description": "Enable www (0|1)",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tag_label": {
                    "type": "string",
                    "description": "Tag label / Tag category label"
                  },
                  "tag_desc": {
                    "type": "string",
                    "description": "Tag description / Tag category description"
                  },
                  "tag_cat_id": {
                    "type": "integer",
                    "description": "Default 0 for a category else the category id the tag belongs to",
                    "format": "int32"
                  },
                  "tag_enabled": {
                    "type": "integer",
                    "description": "Enable (0|1)",
                    "format": "int32"
                  },
                  "tag_enabled_www": {
                    "type": "integer",
                    "description": "Enable www (0|1)",
                    "format": "int32"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tag successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/tags/products/{tag_id}": {
      "delete": {
        "tags": [
          "products",
          "tags",
          "Product tags"
        ],
        "summary": "Delete a product tag",
        "description": "Delete a product tag<br />Scope for public applications : write_products",
        "operationId": "api.delete.tags.products",
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "description": "Tag ID that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products_tags/": {
      "get": {
        "tags": [
          "products",
          "tags",
          "Product tags"
        ],
        "summary": "Returns tags for products",
        "description": "Returns tags for products<br />Scope for public applications : read_products",
        "operationId": "api.tags.products.index",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag ID",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products_tags/{product_id}": {
      "get": {
        "tags": [
          "products",
          "tags",
          "Product tags"
        ],
        "summary": "Returns tags for a specific product_id",
        "description": "Returns tags for a specific product_id<br />Scope for public applications : read_products",
        "operationId": "api.tags.product_id",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag ID",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "products",
          "tags",
          "Product tags"
        ],
        "summary": "Add a tag to a specific product_id",
        "description": "Add a tag to a specific product_id<br />Scope for public applications : write_products",
        "operationId": "api.products_tags.add",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "Product ID for which you need to add a tag ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "tag_id"
                ],
                "type": "object",
                "properties": {
                  "tag_id": {
                    "type": "integer",
                    "description": "Tag ID that needs to be added",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "tag_id"
                ],
                "type": "object",
                "properties": {
                  "tag_id": {
                    "type": "integer",
                    "description": "Tag ID that needs to be added",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Tag successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products_tags/{product_id}/{tag_id}": {
      "delete": {
        "tags": [
          "products",
          "tags",
          "Product tags"
        ],
        "summary": "Delete a tag for a specific product_id",
        "description": "Delete a tag for a specific product_id<br />Scope for public applications : write_products",
        "operationId": "api.products_tags.delete",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "Product ID for which you need to delete a tag ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tag_id",
            "in": "path",
            "description": "Tag ID that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reset/": {
      "post": {
        "tags": [
          "reset"
        ],
        "summary": "Reset account",
        "description": "Reset account<br />Scope for public applications : write_settings<br />Account must be in demo mode",
        "operationId": "api.reset.misc",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "reset_action"
                ],
                "type": "object",
                "properties": {
                  "reset_action": {
                    "type": "string",
                    "description": "What you want to reset : sales_and_stock sale, sales_keep_stock, sales_and_products, clients, everything",
                    "enum": [
                      "sales_and_stock",
                      "sales_keep_stock",
                      "sales_and_products",
                      "clients",
                      "everything"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "reset_action"
                ],
                "type": "object",
                "properties": {
                  "reset_action": {
                    "type": "string",
                    "description": "What you want to reset : sales_and_stock sale, sales_keep_stock, sales_and_products, clients, everything",
                    "enum": [
                      "sales_and_stock",
                      "sales_keep_stock",
                      "sales_and_products",
                      "clients",
                      "everything"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Account successfully reseted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reset/customers/loyalty_points": {
      "post": {
        "tags": [
          "reset"
        ],
        "summary": "Reset customers loyalty points",
        "description": "Reset loyalty points for customers_id<br />Scope for public applications : write_settings<br />Account must be in demo mode",
        "operationId": "api.reset.customers.misc",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "customers_id"
                ],
                "type": "object",
                "properties": {
                  "customers_id": {
                    "type": "integer",
                    "description": "customers_id",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "customers_id"
                ],
                "type": "object",
                "properties": {
                  "customers_id": {
                    "type": "integer",
                    "description": "customers_id",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Loyalty points successfully reseted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/rooms/": {
      "get": {
        "tags": [
          "ressources"
        ],
        "summary": "Returns rooms by ID",
        "description": "Returns rooms by ID",
        "operationId": "api.rooms.index",
        "responses": {
          "200": {
            "description": "Rooms overview",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/ressources/": {
      "get": {
        "tags": [
          "ressources"
        ],
        "summary": "Returns ressources by ID",
        "description": "Returns ressources by ID",
        "operationId": "api.ressources.index",
        "responses": {
          "200": {
            "description": "Ressources overview",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/ressources/{ressource_id}/": {
      "get": {
        "tags": [
          "ressources"
        ],
        "summary": "Returns ressource details",
        "description": "Returns ressource details",
        "operationId": "api.ressources.id",
        "parameters": [
          {
            "name": "ressource_id",
            "in": "path",
            "description": "ID of the ressource",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ressource details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales/comments/": {
      "post": {
        "tags": [
          "sales"
        ],
        "summary": "Add/Update comments",
        "description": "Add/Update comments<br />Scope for public applications : write_sales",
        "operationId": "api.sales.comments.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "Sale ID",
                    "format": "int32"
                  },
                  "comments": {
                    "type": "string",
                    "description": "Sale comments"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "Sale ID",
                    "format": "int32"
                  },
                  "comments": {
                    "type": "string",
                    "description": "Sale comments"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Comments successfully added/modified",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales/": {
      "post": {
        "tags": [
          "sales"
        ],
        "summary": "Create a new sale",
        "description": "Create a new sale<br />Scope for public applications : write_sales",
        "operationId": "api.sales.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "currency_code",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "Store ID",
                    "format": "int32"
                  },
                  "customer_id": {
                    "type": "integer",
                    "description": "Customer ID",
                    "format": "int32"
                  },
                  "duty_free_sale": {
                    "type": "integer",
                    "description": "Duty-free sale (0|1) - default is 0",
                    "format": "int32"
                  },
                  "prices_without_taxes": {
                    "type": "integer",
                    "description": "Prices are without taxes (0|1) - default is 0",
                    "format": "int32"
                  },
                  "quotation": {
                    "type": "integer",
                    "description": "Quotation (0|1) - default is 0",
                    "format": "int32"
                  },
                  "currency_code": {
                    "type": "string",
                    "description": "Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
                  },
                  "vendor_id": {
                    "type": "string",
                    "description": "Vendor ID"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "currency_code",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "Store ID",
                    "format": "int32"
                  },
                  "customer_id": {
                    "type": "integer",
                    "description": "Customer ID",
                    "format": "int32"
                  },
                  "duty_free_sale": {
                    "type": "integer",
                    "description": "Duty-free sale (0|1) - default is 0",
                    "format": "int32"
                  },
                  "prices_without_taxes": {
                    "type": "integer",
                    "description": "Prices are without taxes (0|1) - default is 0",
                    "format": "int32"
                  },
                  "quotation": {
                    "type": "integer",
                    "description": "Quotation (0|1) - default is 0",
                    "format": "int32"
                  },
                  "currency_code": {
                    "type": "string",
                    "description": "Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
                  },
                  "vendor_id": {
                    "type": "string",
                    "description": "Vendor ID"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Sale successfully created",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales/add_product/": {
      "post": {
        "tags": [
          "sales"
        ],
        "summary": "Add a product on a sale",
        "description": "Add a product on a sale<br />Scope for public applications : write_sales",
        "operationId": "api.sales.add_product",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "product_id",
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "Sale ID",
                    "format": "int32"
                  },
                  "product_id": {
                    "type": "integer",
                    "description": "Product ID",
                    "format": "int32"
                  },
                  "size_id": {
                    "type": "integer",
                    "description": "Size ID",
                    "format": "int32"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity",
                    "format": "int32"
                  },
                  "product_price": {
                    "type": "string",
                    "description": "Unit product price"
                  },
                  "product_points": {
                    "type": "string",
                    "description": "Product points earned / used"
                  },
                  "stock_withdrawal": {
                    "type": "string",
                    "description": "Product stock_withdrawal 0 OR 1 (default : 0)"
                  },
                  "product_comments": {
                    "type": "string",
                    "description": "Product comments"
                  },
                  "serial_number": {
                    "type": "string",
                    "description": "Product serial number"
                  },
                  "kitchen_pos": {
                    "type": "string",
                    "description": "Kitchen position from 0 to 5 (default : 1)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "product_id",
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "Sale ID",
                    "format": "int32"
                  },
                  "product_id": {
                    "type": "integer",
                    "description": "Product ID",
                    "format": "int32"
                  },
                  "size_id": {
                    "type": "integer",
                    "description": "Size ID",
                    "format": "int32"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity",
                    "format": "int32"
                  },
                  "product_price": {
                    "type": "string",
                    "description": "Unit product price"
                  },
                  "product_points": {
                    "type": "string",
                    "description": "Product points earned / used"
                  },
                  "stock_withdrawal": {
                    "type": "string",
                    "description": "Product stock_withdrawal 0 OR 1 (default : 0)"
                  },
                  "product_comments": {
                    "type": "string",
                    "description": "Product comments"
                  },
                  "serial_number": {
                    "type": "string",
                    "description": "Product serial number"
                  },
                  "kitchen_pos": {
                    "type": "string",
                    "description": "Kitchen position from 0 to 5 (default : 1)"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales/add_credit_note/": {
      "post": {
        "tags": [
          "sales"
        ],
        "summary": "Add a credit note on a sale",
        "description": "Add a credit note on a sale<br />Scope for public applications : write_sales",
        "operationId": "api.sales.add_credit_note",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "credit_note_code",
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "Sale ID",
                    "format": "int32"
                  },
                  "credit_note_code": {
                    "type": "integer",
                    "description": "Credit note code",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "credit_note_code",
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "Sale ID",
                    "format": "int32"
                  },
                  "credit_note_code": {
                    "type": "integer",
                    "description": "Credit note code",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Credit note successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales/close/": {
      "post": {
        "tags": [
          "sales"
        ],
        "summary": "Close a sale",
        "description": "Close a sale<br />Scope for public applications : write_sales",
        "operationId": "api.sales.close",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "Sale ID",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "Sale ID",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sale successfully closed",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales_payment_div/": {
      "post": {
        "tags": [
          "sales"
        ],
        "summary": "Add a DIV payment to a sale",
        "description": "Add a DIV payment to a sale<br />Scope for public applications : write_sales",
        "operationId": "api.sales.payment_div",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "payment_amount",
                  "payment_type",
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "Sale ID",
                    "format": "int32"
                  },
                  "payment_type": {
                    "type": "string",
                    "description": "Payment type"
                  },
                  "payment_amount": {
                    "type": "string",
                    "description": "Amount"
                  },
                  "payment_date": {
                    "type": "string",
                    "description": "Date payment"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "payment_amount",
                  "payment_type",
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "Sale ID",
                    "format": "int32"
                  },
                  "payment_type": {
                    "type": "string",
                    "description": "Payment type"
                  },
                  "payment_amount": {
                    "type": "string",
                    "description": "Amount"
                  },
                  "payment_date": {
                    "type": "string",
                    "description": "Date payment"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Payment successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized action",
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "content": {}
          }
        }
      }
    },
    "/sales_payment_div/{payment_detail_id}/": {
      "put": {
        "tags": [
          "sales"
        ],
        "summary": "Update a DIV payment",
        "description": "Update a DIV payment<br />Scope for public applications : write_sales",
        "operationId": "api.sale.payment_div.update",
        "parameters": [
          {
            "name": "payment_detail_id",
            "in": "path",
            "description": "payment_detail_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "payment_div_attribute"
                ],
                "type": "object",
                "properties": {
                  "payment_div_attribute": {
                    "type": "string",
                    "description": "One of the following DIV payment attribute : payment_date (format YYYY-MM-DD), payment_date_paid (format YYYY-MM-DD), comments",
                    "enum": [
                      "payment_date",
                      "payment_date_paid",
                      "comments"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the DIV payment attribute"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "payment_div_attribute"
                ],
                "type": "object",
                "properties": {
                  "payment_div_attribute": {
                    "type": "string",
                    "description": "One of the following DIV payment attribute : payment_date (format YYYY-MM-DD), payment_date_paid (format YYYY-MM-DD), comments",
                    "enum": [
                      "payment_date",
                      "payment_date_paid",
                      "comments"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the DIV payment attribute"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "DIV payment successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales_payment_div/{payment_detail_id}": {
      "delete": {
        "tags": [
          "sales"
        ],
        "summary": "Delete DIV payment",
        "description": "Delete DIV payment<br />Scope for public applications : write_sales",
        "operationId": "api.sales.payment_div.delete",
        "parameters": [
          {
            "name": "payment_detail_id",
            "in": "path",
            "description": "payment_detail_id to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DIV payment successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sale/{sale_id}/": {
      "put": {
        "tags": [
          "sales"
        ],
        "summary": "Update a sale attribute",
        "description": "Update a sale attribute<br />Scope for public applications : write_sales",
        "operationId": "api.sale.update",
        "parameters": [
          {
            "name": "sale_id",
            "in": "path",
            "description": "sale_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "sale_attribute"
                ],
                "type": "object",
                "properties": {
                  "sale_attribute": {
                    "type": "string",
                    "description": "One of the following sale attribute : vendor_id, customer_id, billing_address, shipping_address, payment, ext_ref, store_id, takeaway, ressource_id, currency, pickup_date, guests_number, sale_misc, duty_free_sale, prices_without_taxes, cash_received",
                    "enum": [
                      "vendor_id",
                      "customer_id",
                      "billing_address",
                      "shipping_address",
                      "payment",
                      "ext_ref",
                      "store_id",
                      "takeaway",
                      "ressource_id",
                      "currency",
                      "pickup_date",
                      "guests_number",
                      "sale_misc",
                      "duty_free_sale",
                      "prices_without_taxes",
                      "cash_received"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the sale attribute"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "sale_attribute"
                ],
                "type": "object",
                "properties": {
                  "sale_attribute": {
                    "type": "string",
                    "description": "One of the following sale attribute : vendor_id, customer_id, billing_address, shipping_address, payment, ext_ref, store_id, takeaway, ressource_id, currency, pickup_date, guests_number, sale_misc, duty_free_sale, prices_without_taxes, cash_received",
                    "enum": [
                      "vendor_id",
                      "customer_id",
                      "billing_address",
                      "shipping_address",
                      "payment",
                      "ext_ref",
                      "store_id",
                      "takeaway",
                      "ressource_id",
                      "currency",
                      "pickup_date",
                      "guests_number",
                      "sale_misc",
                      "duty_free_sale",
                      "prices_without_taxes",
                      "cash_received"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the sale attribute"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sale attribute successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sale/{sale_id}": {
      "delete": {
        "tags": [
          "sales"
        ],
        "summary": "Delete sale",
        "description": "Delete sale. Sale must be empty and should not have any CREDIT like payments.<br />Scope for public applications : write_sales",
        "operationId": "api.sales.delete",
        "parameters": [
          {
            "name": "sale_id",
            "in": "path",
            "description": "sale_id to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sale successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sale_line_item/{line_item_id}": {
      "get": {
        "tags": [
          "sales"
        ],
        "summary": "Returns details of a line_item_id",
        "description": "Returns details of a line_item_id<br />Scope for public applications : read_sales",
        "operationId": "api.sales.line_item_id",
        "parameters": [
          {
            "name": "line_item_id",
            "in": "path",
            "description": "line_item_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "line_item_id details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sales"
        ],
        "summary": "Delete line_item",
        "description": "Delete line_item<br />Scope for public applications : write_sales",
        "operationId": "api.sale_line_item.delete",
        "parameters": [
          {
            "name": "line_item_id",
            "in": "path",
            "description": "line_item_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Line_item successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sale_line_item/{line_item_id}/": {
      "put": {
        "tags": [
          "sales"
        ],
        "summary": "Update a line_item attribute",
        "description": "Update a line_item attribute<br />Scope for public applications : write_sales",
        "operationId": "api.sale_line_item.update",
        "parameters": [
          {
            "name": "line_item_id",
            "in": "path",
            "description": "line_item_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "line_item_attribute"
                ],
                "type": "object",
                "properties": {
                  "line_item_attribute": {
                    "type": "string",
                    "description": "One of the following line_item attribute : points, product_comments, serial_number, stock_withdrawal, product_price, vat, quantity, discount, product_supply_price",
                    "enum": [
                      "points",
                      "product_comments",
                      "serial_number",
                      "stock_withdrawal",
                      "product_price",
                      "vat",
                      "quantity",
                      "discount",
                      "product_supply_price"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the line_item attribute"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "line_item_attribute"
                ],
                "type": "object",
                "properties": {
                  "line_item_attribute": {
                    "type": "string",
                    "description": "One of the following line_item attribute : points, product_comments, serial_number, stock_withdrawal, product_price, vat, quantity, discount, product_supply_price",
                    "enum": [
                      "points",
                      "product_comments",
                      "serial_number",
                      "stock_withdrawal",
                      "product_price",
                      "vat",
                      "quantity",
                      "discount",
                      "product_supply_price"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the line_item attribute"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Line item attribute successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales/{sale_id}": {
      "get": {
        "tags": [
          "sales"
        ],
        "summary": "Returns details of a sale",
        "description": "Returns details of a sale<br />Scope for public applications : read_sales",
        "operationId": "api.sales.sale_id",
        "parameters": [
          {
            "name": "sale_id",
            "in": "path",
            "description": "sale_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sale details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/closed_sales/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "sales"
        ],
        "summary": "Returns closed sales in a store_id for a specific day or month",
        "description": "Returns closed sales in a store_id for a specific day or month<br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.closed_sales.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Closed sales",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/first_closed_sale/{store_id}": {
      "get": {
        "tags": [
          "sales"
        ],
        "summary": "Returns the first closed sales for a store_id",
        "description": "Returns the first closed sales for a store_id<br />Scope for public applications : read_reports",
        "operationId": "api.first_closed_sale.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "First closed sale",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/closed_sales_by_tag/{tag_id}/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "sales"
        ],
        "summary": "Returns closed sales for a specific tag_id in a store_id for a specific day or month",
        "description": "Returns closed sales for a specific tag_id in a store_id for a specific day or month<br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.closed_sales_by_tag.index",
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "description": "tag_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Closed sales",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/open_sales/{store_id}": {
      "get": {
        "tags": [
          "sales"
        ],
        "summary": "Returns open sales in a store_id",
        "description": "Returns open sales in a store_id (ORDER BY sale_id DESC)<br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.open_sales.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Order by",
            "schema": {
              "type": "string",
              "enum": [
                "sale_id",
                "created_at",
                "vendor_id",
                "customer_id",
                "resource_id",
                "guests_number",
                "pickup_date",
                "total"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort",
            "schema": {
              "type": "string",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Open sales",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sale_line_item_modifier/{line_item_id}/{modifier_id}/": {
      "post": {
        "tags": [
          "sales"
        ],
        "summary": "Add a modifier to a line_item",
        "description": "Add a modifier to a line_item<br />Scope for public applications : write_sales",
        "operationId": "api.sale_line_item_modifier.add",
        "parameters": [
          {
            "name": "line_item_id",
            "in": "path",
            "description": "line_item_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "modifier_id",
            "in": "path",
            "description": "modifier_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Line item modifier successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sales"
        ],
        "summary": "Delete a modifier on a line_item",
        "description": "Delete a modifier on a line_item<br />Scope for public applications : write_sales",
        "operationId": "api.sale_line_item_modifier.delete",
        "parameters": [
          {
            "name": "line_item_id",
            "in": "path",
            "description": "line_item_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "modifier_id",
            "in": "path",
            "description": "modifier_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Line item modifier successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sale_line_item_exchange/{line_item_id}/{stock_id}/": {
      "put": {
        "tags": [
          "sales"
        ],
        "summary": "Exchange a line_item",
        "description": "Exchange a line_item<br />Scope for public applications : write_sales",
        "operationId": "api.sale_line_item.exchange",
        "parameters": [
          {
            "name": "line_item_id",
            "in": "path",
            "description": "line_item_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "stock_id",
            "in": "path",
            "description": "stock_id on which the product should be restocked. 0 to restock the product in it's original stock. otherwise a transfer will be created",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Line item attribute successfully exchanhed",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales/add_global_discount/": {
      "post": {
        "tags": [
          "sales"
        ],
        "summary": "Global discount",
        "description": "Global discount<br />Scope for public applications : write_sales",
        "operationId": "api.add_global_discount",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "amount",
                  "sale_id",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "sale_id",
                    "format": "int32"
                  },
                  "type": {
                    "type": "integer",
                    "description": "discount type 1 (absolute) | 2 (relative)",
                    "format": "int32"
                  },
                  "amount": {
                    "type": "number",
                    "description": "discount amount"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "amount",
                  "sale_id",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "sale_id",
                    "format": "int32"
                  },
                  "type": {
                    "type": "integer",
                    "description": "discount type 1 (absolute) | 2 (relative)",
                    "format": "int32"
                  },
                  "amount": {
                    "type": "number",
                    "description": "discount amount"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Global discount applied",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales/open_package/": {
      "post": {
        "tags": [
          "sales",
          "package"
        ],
        "summary": "Add an open package on a sale",
        "description": "Add an open package on a sale<br />Scope for public applications : write_sales",
        "operationId": "api.sales.add_open_package",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "product_id",
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "Sale ID",
                    "format": "int32"
                  },
                  "product_id": {
                    "type": "integer",
                    "description": "Product ID",
                    "format": "int32"
                  },
                  "product_comments": {
                    "type": "string",
                    "description": "Product comments"
                  },
                  "kitchen_pos": {
                    "type": "string",
                    "description": "Kitchen position from 0 to 5 (default : 1)"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "product_id",
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "integer",
                    "description": "Sale ID",
                    "format": "int32"
                  },
                  "product_id": {
                    "type": "integer",
                    "description": "Product ID",
                    "format": "int32"
                  },
                  "product_comments": {
                    "type": "string",
                    "description": "Product comments"
                  },
                  "kitchen_pos": {
                    "type": "string",
                    "description": "Kitchen position from 0 to 5 (default : 1)"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Open package successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales/open_package/pack/{pack_line_item_id}/{product_line_item_id}": {
      "put": {
        "tags": [
          "sales",
          "package"
        ],
        "summary": "Pack a product in an open package",
        "description": "Pack a product in an open package<br />Scope for public applications : write_sales",
        "operationId": "api.open_package.pack",
        "parameters": [
          {
            "name": "pack_line_item_id",
            "in": "path",
            "description": "Line item ID of the open package",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_line_item_id",
            "in": "path",
            "description": "Line item ID of the product you want to pack",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Line item successfully packed",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales/open_package/unpack/{line_item_id}": {
      "put": {
        "tags": [
          "sales",
          "package"
        ],
        "summary": "Unpack a line item id (either a product or an open package)",
        "description": "Unpack a line item id (either a product or an open package)<br />Scope for public applications : write_sales",
        "operationId": "api.open_package.unpack",
        "parameters": [
          {
            "name": "line_item_id",
            "in": "path",
            "description": "Line item ID to unpack",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Line item successfully unpacked",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales/open_package/{line_item_id}": {
      "delete": {
        "tags": [
          "sales",
          "package"
        ],
        "summary": "Delete an open package (must be completely unpacked)",
        "description": "Delete an open package (must be completely unpacked)<br />Scope for public applications : write_sales",
        "operationId": "api.open_package.delete",
        "parameters": [
          {
            "name": "line_item_id",
            "in": "path",
            "description": "line_item_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Line_item successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/tags/sales/": {
      "get": {
        "tags": [
          "sales",
          "tags"
        ],
        "summary": "Returns tags for sales",
        "description": "Returns tags for sales<br />Scope for public applications : read_sales",
        "operationId": "api.tags.sales",
        "responses": {
          "200": {
            "description": "Tags",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales_tags/{sale_id}": {
      "get": {
        "tags": [
          "sales",
          "tags"
        ],
        "summary": "Returns tags for a specific sale_id",
        "description": "Returns tags for a specific sale_id<br />Scope for public applications : read_sales",
        "operationId": "api.tags.sale_id",
        "parameters": [
          {
            "name": "sale_id",
            "in": "path",
            "description": "Sale ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sale tags",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sales",
          "tags"
        ],
        "summary": "Add a tag to a specific sale_id",
        "description": "Add a tag to a specific sale_id<br />Scope for public applications : write_sales",
        "operationId": "api.sales_tags.add",
        "parameters": [
          {
            "name": "sale_id",
            "in": "path",
            "description": "Sale ID for which you need to add a tag ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "tag_id"
                ],
                "type": "object",
                "properties": {
                  "tag_id": {
                    "type": "integer",
                    "description": "Tag ID that needs to be added",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "tag_id"
                ],
                "type": "object",
                "properties": {
                  "tag_id": {
                    "type": "integer",
                    "description": "Tag ID that needs to be added",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Tag successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales_tags/{sale_id}/{tag_id}": {
      "delete": {
        "tags": [
          "sales",
          "tags"
        ],
        "summary": "Delete a tag to a specific sale_id",
        "description": "Delete a tag to a specific sale_id<br />Scope for public applications : write_sales",
        "operationId": "api.sales_tags.delete",
        "parameters": [
          {
            "name": "sale_id",
            "in": "path",
            "description": "Sale ID for which you need to delete a tag ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tag_id",
            "in": "path",
            "description": "Tag ID that needs to be deleted. 0 to delete all tags",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tag successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/search/": {
      "get": {
        "tags": [
          "customers",
          "search"
        ],
        "summary": "Search for customers that match a supplied query",
        "description": "Search for customers that match a supplied query<br />Scope for public applications : read_customers<br />Results per page : 250",
        "operationId": "api.search.customers.index",
        "parameters": [
          {
            "name": "last_name",
            "in": "query",
            "description": "last_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_name",
            "in": "query",
            "description": "first_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "phone",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vat",
            "in": "query",
            "description": "vat",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "country",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_of_birth",
            "in": "query",
            "description": "date_of_birth",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validity",
            "in": "query",
            "description": "validity | format : YYYY-MM-DD equal by default, if you need > (or <, or <=, or >=) send >YYYY-MM-DD for example",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customers_code",
            "in": "query",
            "description": "customers_code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customers_ref_ext",
            "in": "query",
            "description": "customers_ref_ext",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loyalty_points",
            "in": "query",
            "description": "loyalty_points | format : integer equal by default, if you need > (or <, or <=, or >=) send >X for example",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_order_date",
            "in": "query",
            "description": "last_order_date | format : YYYY-MM-DD equal by default, if you need > (or <, or <=, or >=) send >YYYY-MM-DD for example",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customers",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers/search/tags/{tag_id}": {
      "get": {
        "tags": [
          "customers",
          "search"
        ],
        "summary": "Returns customers search results by tag_id",
        "description": "Returns customers search results by tag_id<br />Scope for public applications : read_customers<br />Results per page : 250",
        "operationId": "api.customers.tag_id.search",
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "description": "Tag ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Order by",
            "schema": {
              "type": "string",
              "enum": [
                "customers_id",
                "last_name",
                "country",
                "date_of_birth",
                "validity",
                "customers_code"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort",
            "schema": {
              "type": "string",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customers details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stock_transfer/search/": {
      "get": {
        "tags": [
          "stock_transfer",
          "search"
        ],
        "summary": "Search for stock_transfer that match a supplied query",
        "description": "Search for stock_transfer that match a supplied query<br />Scope for public applications : read_inventory<br />Results per page : 250",
        "operationId": "api.search.stock_transfer.index",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Date format : YYYY-MM-DD or YYYY-MM or YYYY",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock transfer",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/products/search/": {
      "get": {
        "tags": [
          "products",
          "search"
        ],
        "summary": "Search for products that match a supplied query",
        "description": "Search for products that match a supplied query<br />Scope for public applications : read_products<br />Results per page : 250",
        "operationId": "api.search.products.index",
        "parameters": [
          {
            "name": "product_model",
            "in": "query",
            "description": "product_model",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_category",
            "in": "query",
            "description": "Product category (int category_id)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_brand",
            "in": "query",
            "description": "Product brand (int brand_id)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_supplier",
            "in": "query",
            "description": "product_supplier (int supplier_id)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_arch",
            "in": "query",
            "description": "product_arch (1 OR 0 OR null)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_stock_management",
            "in": "query",
            "description": "product_stock_management (1 OR 0 OR null)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_supplier_reference",
            "in": "query",
            "description": "product_supplier_reference",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_vat",
            "in": "query",
            "description": "product_vat",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "products_ref_ext",
            "in": "query",
            "description": "products_ref_ext",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accounting_account",
            "in": "query",
            "description": "accounting_account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_package",
            "in": "query",
            "description": "product_package",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_display_www",
            "in": "query",
            "description": "product_display_www",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_display",
            "in": "query",
            "description": "product_display",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Order by",
            "schema": {
              "type": "string",
              "enum": [
                "product_id",
                "product_model",
                "product_price",
                "product_supply_price",
                "product_size_type",
                "product_display",
                "product_display_www",
                "product_arch",
                "updated_at",
                "product_order",
                "stock_available"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort",
            "schema": {
              "type": "string",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/categories/search/": {
      "get": {
        "tags": [
          "categories",
          "search"
        ],
        "summary": "Search for categories that match a supplied query",
        "description": "Search for categories that match a supplied query<br />Scope for public applications : read_products<br />Results per page : 250",
        "operationId": "api.search.categories.index",
        "parameters": [
          {
            "name": "category_id",
            "in": "query",
            "description": "category_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "category_name",
            "in": "query",
            "description": "category_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category_id_parent",
            "in": "query",
            "description": "category_id_parent",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "category_enabled",
            "in": "query",
            "description": "category_enabled (1 OR 0 OR null)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "category_enabled_www",
            "in": "query",
            "description": "category_enabled_www (1 OR 0 OR null)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "category_desc",
            "in": "query",
            "description": "category_desc",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accounting_account",
            "in": "query",
            "description": "accounting_account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category_ref_ext",
            "in": "query",
            "description": "category_ref_ext",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Order by",
            "schema": {
              "type": "string",
              "enum": [
                "category_id",
                "category_id_parent",
                "category_enabled",
                "category_enabled_www",
                "accounting_account",
                "category_ref_ext"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort",
            "schema": {
              "type": "string",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Categories",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/modifiers/search/": {
      "get": {
        "tags": [
          "modifiers",
          "search"
        ],
        "summary": "Search for modifiers that match a supplied query",
        "description": "Search for modifiers that match a supplied query<br />Scope for public applications : read_products<br />Results per page : 250",
        "operationId": "api.search.modifiers.index",
        "parameters": [
          {
            "name": "modifier_id",
            "in": "query",
            "description": "modifier_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "modifier_label",
            "in": "query",
            "description": "modifier_label",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modifier_group_id",
            "in": "query",
            "description": "modifier_group_id",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "modifier_price",
            "in": "query",
            "description": "modifier_price",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "modifier_enabled",
            "in": "query",
            "description": "modifier_enabled (1 OR 0 OR null)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "modifier_enabled_www",
            "in": "query",
            "description": "modifier_enabled_www (1 OR 0 OR null)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "modifier_required",
            "in": "query",
            "description": "modifier_required (1 OR 0 OR null)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "modifier_ref_ext",
            "in": "query",
            "description": "modifier_ref_ext",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Order by",
            "schema": {
              "type": "string",
              "enum": [
                "modifier_id",
                "modifier_group_id",
                "modifier_price",
                "modifier_enabled",
                "modifier_enabled_www",
                "modifier_required",
                "modifier_ref_ext"
              ]
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort",
            "schema": {
              "type": "string",
              "enum": [
                "DESC",
                "ASC"
              ]
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modifiers",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sales/search/ext_ref/{q}": {
      "get": {
        "tags": [
          "sales",
          "search"
        ],
        "summary": "Returns sales search results by ext_ref",
        "description": "Returns sales search results by ext_ref<br />Scope for public applications : read_sales<br />Results per page : 250",
        "operationId": "api.sales.ext_ref.search",
        "parameters": [
          {
            "name": "q",
            "in": "path",
            "description": "Search value",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sales details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/shoutbox/": {
      "post": {
        "tags": [
          "shoutbox"
        ],
        "summary": "Post a new message",
        "description": "Post a new message<br />Scope for public applications : read_customers",
        "operationId": "api.shoutbox.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "Store ID : 0 is message is visible for all the stores",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string",
                    "description": "message"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "Store ID : 0 is message is visible for all the stores",
                    "format": "int32"
                  },
                  "message": {
                    "type": "string",
                    "description": "message"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Message successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sizes/{size_type_id}": {
      "get": {
        "tags": [
          "sizes"
        ],
        "summary": "Returns variants for a specific variant type ID",
        "description": "Returns variants for a specific variant type ID<br />Scope for public applications : read_products",
        "operationId": "api.sizes.stock_id",
        "parameters": [
          {
            "name": "size_type_id",
            "in": "path",
            "description": "ID of the size type",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns different sizes for a defined size type ID",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sizes/": {
      "post": {
        "tags": [
          "sizes"
        ],
        "summary": "Create a new size",
        "description": "Create a new size<br />Scope for public applications : write_products",
        "operationId": "api.sizes.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "size_name",
                  "size_type_id"
                ],
                "type": "object",
                "properties": {
                  "size_type_id": {
                    "type": "string",
                    "description": "Size type id"
                  },
                  "size_name": {
                    "type": "string",
                    "description": "Size name"
                  },
                  "size_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "size_name",
                  "size_type_id"
                ],
                "type": "object",
                "properties": {
                  "size_type_id": {
                    "type": "string",
                    "description": "Size type id"
                  },
                  "size_name": {
                    "type": "string",
                    "description": "Size name"
                  },
                  "size_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Size successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/size_types": {
      "get": {
        "tags": [
          "sizes"
        ],
        "summary": "Returns variant types by ID",
        "description": "Returns variant types by ID<br />Scope for public applications : read_products",
        "operationId": "api.size_types.id",
        "responses": {
          "200": {
            "description": "Size types by ID",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/size_types/": {
      "post": {
        "tags": [
          "sizes"
        ],
        "summary": "Create a new size type",
        "description": "Create a new size type<br />Scope for public applications : write_products",
        "operationId": "api.size_types.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "size_type_name"
                ],
                "type": "object",
                "properties": {
                  "size_type_name": {
                    "type": "string",
                    "description": "Size type name"
                  },
                  "size_type_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "size_type_name"
                ],
                "type": "object",
                "properties": {
                  "size_type_name": {
                    "type": "string",
                    "description": "Size type name"
                  },
                  "size_type_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Size type successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sizes_pretty/": {
      "get": {
        "tags": [
          "sizes"
        ],
        "summary": "Returns variants types by ID - Pretty",
        "description": "Returns variant types by ID - Pretty<br />Scope for public applications : read_products",
        "operationId": "api.sizes_pretty.stock_id",
        "responses": {
          "200": {
            "description": "Returns different sizes",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/sizes_specific_rules": {
      "get": {
        "tags": [
          "sizes"
        ],
        "summary": "Returns specific rules for sizes",
        "description": "Returns specific rules for sizes<br />Scope for public applications : read_products<br />Results per page : 250",
        "operationId": "api.sizes_specific_rules.id",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Size specific rules",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/active_sizes/": {
      "get": {
        "tags": [
          "sizes",
          "active_sizes"
        ],
        "summary": "Returns active sizes",
        "description": "Returns active sizes<br />Scope for public applications : read_products<br />Results per page : 250",
        "operationId": "api.active_sizes.all",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns Returns active sizes",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "sizes",
          "active_sizes"
        ],
        "summary": "Create a new active size",
        "description": "Create a new active size<br />Scope for public applications : write_products",
        "operationId": "api.active_sizes.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "product_id"
                ],
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "integer",
                    "description": "product_id",
                    "format": "int32"
                  },
                  "size_id": {
                    "type": "integer",
                    "description": "size_id",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "product_id"
                ],
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "integer",
                    "description": "product_id",
                    "format": "int32"
                  },
                  "size_id": {
                    "type": "integer",
                    "description": "size_id",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Active size successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/active_sizes/{product_id}": {
      "get": {
        "tags": [
          "sizes",
          "active_sizes"
        ],
        "summary": "Returns active sizes for a specific product ID",
        "description": "Returns active sizes for a specific product_id<br />Scope for public applications : read_products",
        "operationId": "api.active_sizes.product_id",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns different sizes for a defined size type ID",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/active_sizes/{product_id}/{size_id}": {
      "delete": {
        "tags": [
          "sizes",
          "active_sizes"
        ],
        "summary": "Delete an active size",
        "description": "Delete an active size. You can omit size_id if you want to delete all active sizes for a given product.<br />Scope for public applications : write_products",
        "operationId": "api.active_sizes.delete",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "size_id",
            "in": "path",
            "description": "size_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Active size successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/active_sizes/all/": {
      "delete": {
        "tags": [
          "sizes",
          "active_sizes"
        ],
        "summary": "Delete all active sizes",
        "description": "Delete all active sizes<br />Scope for public applications : write_products",
        "operationId": "api.active_sizes_all.delete",
        "responses": {
          "200": {
            "description": "Active sizes successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/active_sizes/build_from_stock_available": {
      "post": {
        "tags": [
          "sizes",
          "active_sizes"
        ],
        "summary": "Bulk create active sizes based on stock available",
        "description": "Create active sizes based on stock available (strictly positive). This route will reset saved active sizes.<br />Scope for public applications : write_products",
        "operationId": "api.active_sizes_bulk_sa.add",
        "responses": {
          "201": {
            "description": "Active sizes successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/active_sizes/build_from_stock_available_and_alerts": {
      "post": {
        "tags": [
          "sizes",
          "active_sizes"
        ],
        "summary": "Bulk create active sizes based on stock available or stock alerts",
        "description": "Create active sizes based on stock available (strictly positive) or stock alerts (strictly positive). This route will reset saved active sizes.<br />Scope for public applications : write_products",
        "operationId": "api.active_sizes_bulk_sa_alerts.add",
        "responses": {
          "201": {
            "description": "Active sizes successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/active_sizes/build_from_inventory_inputs_and_sales": {
      "post": {
        "tags": [
          "sizes",
          "active_sizes"
        ],
        "summary": "Bulk create active sizes based on inventory inputs and sales",
        "description": "Create active sizes based on inventory inputs and sales. This route will reset saved active sizes.<br />Scope for public applications : write_products",
        "operationId": "api.active_sizes_bulk_ii_sa.add",
        "responses": {
          "201": {
            "description": "Active sizes successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/active_sizes/build_from_barcode_rules": {
      "post": {
        "tags": [
          "sizes",
          "active_sizes"
        ],
        "summary": "Bulk create active sizes based on barcode rules",
        "description": "Create active sizes based on barcode rules (if a specific rule exists). This route will reset saved active sizes.<br />Scope for public applications : write_products",
        "operationId": "api.active_sizes_bulk_barcode_rules.add",
        "responses": {
          "201": {
            "description": "Active sizes successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/turnover/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Returns sales total for store_id for a specific day or month",
        "description": "Returns sales total for store_id for a specific day or month <br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.stats.turnover.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sales total report",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/product/{product_id}/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Returns sales for a specific product id",
        "description": "Returns sales for a specific product id<br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.stats.product.index",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "product_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sales total report",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/products_tags/{store_id}/{year}/{month}": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Returns sales total for store_id for a specific month by products tags",
        "description": "Returns sales total for store_id for a specific month by products tags<br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.stats.products_tags.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sales total report",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/sales_by_tag/{tag_id}/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Returns sales for a specific tag_id id",
        "description": "Returns sales for a specific tag_id<br />Scope for public applications : read_reports<br />Results per page : 250<br />The only mandatoty parameter is store_id",
        "operationId": "api.stats.sales_by_tag.index",
        "parameters": [
          {
            "name": "tag_id",
            "in": "path",
            "description": "tag_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sales total report",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/products/{store_id}/{year}/{month}": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Returns product sold for store_id for a specific month",
        "description": "Returns product sold for store_id for a specific month<br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.stats.products.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report of products solds",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/categories/{store_id}/{year}/{month}": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Returns sales by category for store_id for a specific month",
        "description": "Returns sales by category for store_id for a specific month <br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.stats.categories.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sales by category report",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/brands/{store_id}/{year}/{month}": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Returns sales by brand for store_id for a specific month",
        "description": "Returns sales by brand for store_id for a specific month<br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.stats.brands.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sales by brand report",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/suppliers/{store_id}/{year}/{month}": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Returns sales by supplier for store_id for a specific month",
        "description": "Returns sales by supplier for store_id for a specific month<br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.stats.suppliers.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sales by supplier report",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/sales_per_customer/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Returns number of sales by customer for store_id for a specific day or month",
        "description": "Returns number of sales by customer for store_id for a specific day or month<br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.stats.sales_per_customer.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Number of sales by customer report",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/refresh/supply_prices": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Refresh supply prices of sold products based on a First In First Out (FIFO) calculation method",
        "description": "Refresh supply prices of sold products based on a First In First Out (FIFO) calculation method<br />Scope for public applications : read_reports",
        "operationId": "api.stats.refresh_supply_prices",
        "responses": {
          "200": {
            "description": "Refresh supply prices of sold products based on a First In First Out (FIFO) calculation method",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/refresh/customers": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Refresh customers data (last order date, turnover, loyalty points etc...)",
        "description": "Refresh customers data (last order date, turnover, loyalty points etc...)<br />Scope for public applications : read_reports",
        "operationId": "api.stats.refresh_customers",
        "responses": {
          "200": {
            "description": "Customers data successfully refreshed",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/refresh/stats/{year}/{month}": {
      "get": {
        "tags": [
          "reports"
        ],
        "summary": "Refresh stats",
        "description": "Refresh stats<br />Scope for public applications : read_reports",
        "operationId": "api.stats.refresh_stats",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Refresh stats",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stock_available/warehouse_id/{warehouse_id}": {
      "get": {
        "tags": [
          "stock",
          "warehouses"
        ],
        "summary": "Returns stock available for a specific warehouse_id",
        "description": "Returns stock available for a specific warehouse_id<br />Scope for public applications : read_inventory",
        "operationId": "api.stock_available.stock_id",
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "path",
            "description": "ID of the warehouse",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_category",
            "in": "query",
            "description": "Product category (int category_id)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_brand",
            "in": "query",
            "description": "Product brand (int brand_id)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_supplier",
            "in": "query",
            "description": "product_supplier (int supplier_id)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_arch",
            "in": "query",
            "description": "product_arch (1 OR 0 OR null)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_stock_management",
            "in": "query",
            "description": "product_stock_management (1 OR 0 OR null)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_supplier_reference",
            "in": "query",
            "description": "product_supplier_reference",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_vat",
            "in": "query",
            "description": "product_vat",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "products_ref_ext",
            "in": "query",
            "description": "products_ref_ext",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accounting_account",
            "in": "query",
            "description": "accounting_account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_display_www",
            "in": "query",
            "description": "product_display_www",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock available overview for a defined warehouse_id",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stock_available/all_wh": {
      "get": {
        "tags": [
          "stock",
          "warehouses"
        ],
        "summary": "Returns stock available for all warehouses",
        "description": "Returns stock available for all warehouses<br />Scope for public applications : read_inventory",
        "operationId": "api.stock_available.all_wh",
        "parameters": [
          {
            "name": "product_category",
            "in": "query",
            "description": "Product category (int category_id)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_brand",
            "in": "query",
            "description": "Product brand (int brand_id)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_supplier",
            "in": "query",
            "description": "product_supplier (int supplier_id)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_arch",
            "in": "query",
            "description": "product_arch (1 OR 0 OR null)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_stock_management",
            "in": "query",
            "description": "product_stock_management (1 OR 0 OR null)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_supplier_reference",
            "in": "query",
            "description": "product_supplier_reference",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_vat",
            "in": "query",
            "description": "product_vat",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "products_ref_ext",
            "in": "query",
            "description": "products_ref_ext",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accounting_account",
            "in": "query",
            "description": "accounting_account",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_display_www",
            "in": "query",
            "description": "product_display_www",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock available overview for all warehouses",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stock_available/product_id/{product_id}": {
      "get": {
        "tags": [
          "stock",
          "products"
        ],
        "summary": "Returns stock available for a specific product_id",
        "description": "Returns stock available for a specific product_id<br />Scope for public applications : read_inventory",
        "operationId": "api.stock_available.product_id",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock available overview for a defined ID product",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stock_available/product_id_size/{product_id}/{product_size}": {
      "get": {
        "tags": [
          "stock",
          "products"
        ],
        "summary": "Returns stock available for a specific product_id and size_id",
        "description": "Returns stock available for a specific product_id and size_id<br />Scope for public applications : read_inventory",
        "operationId": "api.stock_available.product_id_size",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_size",
            "in": "path",
            "description": "Size ID of the product",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock available overview for a defined ID product and size ID",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stock_available/sn/{product_id}/{product_size}": {
      "get": {
        "tags": [
          "stock",
          "products"
        ],
        "summary": "Returns serial numbers available for a specific product_id and size_id",
        "description": "Returns serial numbers available for a specific product_id and size_id<br />Scope for public applications : read_inventory<br />Results per page : 250",
        "operationId": "api.stock_available.by_sn",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "product_size",
            "in": "path",
            "description": "Size ID of the product",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Serial numbers available overview for a defined ID product and size ID",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stock_alert/": {
      "put": {
        "tags": [
          "stock",
          "products"
        ],
        "summary": "Set product stock alert",
        "description": "Set product stock alert<br />Scope for public applications : write_inventory",
        "operationId": "api.stock_available.set_alert",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "product_id",
                  "warehouse_id"
                ],
                "type": "object",
                "properties": {
                  "warehouse_id": {
                    "type": "integer",
                    "description": "warehouse_id",
                    "format": "int32"
                  },
                  "product_id": {
                    "type": "integer",
                    "description": "product_id",
                    "format": "int32"
                  },
                  "product_size": {
                    "type": "integer",
                    "description": "product_size. If none, 0",
                    "format": "int32"
                  },
                  "alert": {
                    "type": "integer",
                    "description": "New value for the stock alert. If none, 0",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "product_id",
                  "warehouse_id"
                ],
                "type": "object",
                "properties": {
                  "warehouse_id": {
                    "type": "integer",
                    "description": "warehouse_id",
                    "format": "int32"
                  },
                  "product_id": {
                    "type": "integer",
                    "description": "product_id",
                    "format": "int32"
                  },
                  "product_size": {
                    "type": "integer",
                    "description": "product_size. If none, 0",
                    "format": "int32"
                  },
                  "alert": {
                    "type": "integer",
                    "description": "New value for the stock alert. If none, 0",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Alert successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/reset_stock_alerts/": {
      "get": {
        "tags": [
          "stock",
          "products"
        ],
        "summary": "Reset stock alerts for all products for all warehouses",
        "description": "Reset stock alerts for all products for all warehouses<br />Scope for public applications : write_inventory",
        "operationId": "api.stock_available.reset_stock_alert",
        "responses": {
          "200": {
            "description": "Stock alerts successfully reseted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/inventory_inputs/warehouse_id/{warehouse_id}": {
      "get": {
        "tags": [
          "stock",
          "warehouses"
        ],
        "summary": "Returns stock orders for a specific warehouse_i",
        "description": "Returns stock orders for a specific warehouse_i<br />Scope for public applications : read_inventory<br />Results per page : 250",
        "operationId": "api.inventory_inputs.warehouse_id",
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "path",
            "description": "ID of the warehouse",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Iventory inputs overview for a defined warehouse_id",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/inventory_counts/": {
      "post": {
        "tags": [
          "inventory_counts"
        ],
        "summary": "Set/Modify a counted quantity for a product",
        "description": "Set/Modify a counted quantity for a product<br />Scope for public applications : write_inventory",
        "operationId": "api.inventory_counts.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "product_id",
                  "quantity",
                  "warehouse_id"
                ],
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "string",
                    "description": "Product ID"
                  },
                  "product_size": {
                    "type": "string",
                    "description": "Product size"
                  },
                  "warehouse_id": {
                    "type": "string",
                    "description": "Warehouse ID"
                  },
                  "quantity": {
                    "type": "string",
                    "description": "New quantity"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "product_id",
                  "quantity",
                  "warehouse_id"
                ],
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "string",
                    "description": "Product ID"
                  },
                  "product_size": {
                    "type": "string",
                    "description": "Product size"
                  },
                  "warehouse_id": {
                    "type": "string",
                    "description": "Warehouse ID"
                  },
                  "quantity": {
                    "type": "string",
                    "description": "New quantity"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Product successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/inventory_close/": {
      "post": {
        "tags": [
          "inventory_counts"
        ],
        "summary": "Close an inventory count (stock-take)",
        "description": "Close an inventory count (stock-take)<br />Scope for public applications : write_inventory",
        "operationId": "api.inventory_counts.close",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "warehouse_id"
                ],
                "type": "object",
                "properties": {
                  "warehouse_id": {
                    "type": "string",
                    "description": "Warehouse ID"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "warehouse_id"
                ],
                "type": "object",
                "properties": {
                  "warehouse_id": {
                    "type": "string",
                    "description": "Warehouse ID"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Inventory successfully closed",
            "content": {}
          },
          "400": {
            "description": "Client error",
            "content": {}
          },
          "401": {
            "description": "Unauthorized action",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/inventory_counts/sales/{warehouse_id}/{year}/{month}": {
      "get": {
        "tags": [
          "inventory_counts"
        ],
        "summary": "Returns sales linked to inventory counts for a specific month",
        "description": "Returns sales linked to inventory counts for a specific month<br />Scope for public applications : read_inventory",
        "operationId": "api.inventory_counts.sales.index",
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "path",
            "description": "warehouse_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment types",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/inventory_counts/stock_orders/{warehouse_id}/{year}/{month}": {
      "get": {
        "tags": [
          "inventory_counts"
        ],
        "summary": "Returns stock orders linked to inventory counts for a specific month",
        "description": "Returns stock orders linked to inventory counts for a specific month<br />Scope for public applications : read_inventory",
        "operationId": "api.inventory_counts.stock_orders.index",
        "parameters": [
          {
            "name": "warehouse_id",
            "in": "path",
            "description": "warehouse_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment types",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stock_transfer/": {
      "get": {
        "tags": [
          "products",
          "stock_transfer"
        ],
        "summary": "Returns stock transfers",
        "description": "Returns stock transfers<br />Scope for public applications : read_inventory<br />Results per page : 250",
        "operationId": "api.stock_transfer.index",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock transfers",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "products",
          "stock_transfer"
        ],
        "summary": "Create a stock transfer",
        "description": "Create a stock transfer<br />Scope for public applications : write_inventory",
        "operationId": "api.stock_transfer.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "from_stock_id",
                  "to_stock_id"
                ],
                "type": "object",
                "properties": {
                  "from_stock_id": {
                    "type": "integer",
                    "description": "From stock ID",
                    "format": "int32"
                  },
                  "to_stock_id": {
                    "type": "integer",
                    "description": "To stock ID",
                    "format": "int32"
                  },
                  "label": {
                    "type": "string",
                    "description": "Stock transfer label"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "from_stock_id",
                  "to_stock_id"
                ],
                "type": "object",
                "properties": {
                  "from_stock_id": {
                    "type": "integer",
                    "description": "From stock ID",
                    "format": "int32"
                  },
                  "to_stock_id": {
                    "type": "integer",
                    "description": "To stock ID",
                    "format": "int32"
                  },
                  "label": {
                    "type": "string",
                    "description": "Stock transfer label"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Stock transfer successfully created",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stock_transfer/{transfer_id}": {
      "get": {
        "tags": [
          "products",
          "stock_transfer"
        ],
        "summary": "Returns details of a stock transfer",
        "description": "Returns details of a stock transfer<br />Scope for public applications : read_inventory",
        "operationId": "api.stock_transfer_info.index",
        "parameters": [
          {
            "name": "transfer_id",
            "in": "path",
            "description": "transfer_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock transfer details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stock_transfer_validate/": {
      "post": {
        "tags": [
          "products",
          "stock_transfer"
        ],
        "summary": "Validate a stock transfer",
        "description": "Validate a stock transfer<br />Scope for public applications : write_inventory",
        "operationId": "api.stock_transfer_validate.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "transfer_id"
                ],
                "type": "object",
                "properties": {
                  "transfer_id": {
                    "type": "integer",
                    "description": "Stock transfer ID",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "transfer_id"
                ],
                "type": "object",
                "properties": {
                  "transfer_id": {
                    "type": "integer",
                    "description": "Stock transfer ID",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Stock transfer successfully validated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stock_transfer_validate_in_out/": {
      "post": {
        "tags": [
          "products",
          "stock_transfer"
        ],
        "summary": "Validate a stock transfer",
        "description": "Validate a stock transfer in or out<br />Scope for public applications : write_inventory",
        "operationId": "api.stock_transfer_validate.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "transfer_id",
                  "way"
                ],
                "type": "object",
                "properties": {
                  "transfer_id": {
                    "type": "integer",
                    "description": "Stock transfer ID",
                    "format": "int32"
                  },
                  "way": {
                    "type": "string",
                    "description": "One of the following way : in OR out",
                    "enum": [
                      "out",
                      "in"
                    ]
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "transfer_id",
                  "way"
                ],
                "type": "object",
                "properties": {
                  "transfer_id": {
                    "type": "integer",
                    "description": "Stock transfer ID",
                    "format": "int32"
                  },
                  "way": {
                    "type": "string",
                    "description": "One of the following way : in OR out",
                    "enum": [
                      "out",
                      "in"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Stock transfer successfully validated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stock_transfer_details/{transfer_id}": {
      "get": {
        "tags": [
          "products",
          "stock_transfer"
        ],
        "summary": "Returns details of a stock transfer",
        "description": "Returns details of a stock transfer<br />Scope for public applications : read_inventory",
        "operationId": "api.stock_transfer_details.index",
        "parameters": [
          {
            "name": "transfer_id",
            "in": "path",
            "description": "Stock transfer ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock transfer details",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "products",
          "stock_transfer"
        ],
        "summary": "Add a product to a specific transfer_id",
        "description": "Add a product to a specific transfer_id<br />Scope for public applications : write_inventory",
        "operationId": "api.stock_transfer_details.add_product",
        "parameters": [
          {
            "name": "transfer_id",
            "in": "path",
            "description": "Stock transfer ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "product_id",
                  "product_size"
                ],
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "integer",
                    "description": "Product ID you need to add to the stock transfer",
                    "format": "int32"
                  },
                  "product_size": {
                    "type": "integer",
                    "description": "Product size you need to add to the stock transfer",
                    "format": "int32"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity (if empty value is 1)",
                    "format": "int32"
                  },
                  "product_price": {
                    "type": "string",
                    "description": "Price (if empty value is 0)"
                  },
                  "serial_number": {
                    "type": "string",
                    "description": "Serial number"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "product_id",
                  "product_size"
                ],
                "type": "object",
                "properties": {
                  "product_id": {
                    "type": "integer",
                    "description": "Product ID you need to add to the stock transfer",
                    "format": "int32"
                  },
                  "product_size": {
                    "type": "integer",
                    "description": "Product size you need to add to the stock transfer",
                    "format": "int32"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity (if empty value is 1)",
                    "format": "int32"
                  },
                  "product_price": {
                    "type": "string",
                    "description": "Price (if empty value is 0)"
                  },
                  "serial_number": {
                    "type": "string",
                    "description": "Serial number"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Customer successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stock_transfer_details/{stock_transfer_detail_id}": {
      "delete": {
        "tags": [
          "products",
          "stock_transfer"
        ],
        "summary": "Delete a stock_transfer_detail_id",
        "description": "Delete a stock_transfer_detail_id<br />Scope for public applications : write_inventory",
        "operationId": "api.stock_transfer_details.delete",
        "parameters": [
          {
            "name": "stock_transfer_detail_id",
            "in": "path",
            "description": "stock_transfer_detail_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock transfert detail ID successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stock_transfer_on_hold/": {
      "get": {
        "tags": [
          "products",
          "stock_transfer"
        ],
        "summary": "Returns the list of stock transfer details on hold",
        "description": "Returns the list of stock transfer details on hold<br />Scope for public applications : read_inventory<br />Results per page : 250",
        "operationId": "api.stock_transfer_details_on_hold.index",
        "parameters": [
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock transfert details on hold",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/stores": {
      "get": {
        "tags": [
          "stores"
        ],
        "summary": "Returns stores by ID",
        "description": "Returns stores by ID<br />Scope for public applications : read_settings",
        "operationId": "api.stores.index",
        "responses": {
          "200": {
            "description": "Stores overview",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/store/attribute/": {
      "put": {
        "tags": [
          "stores"
        ],
        "summary": "Update a store attribute",
        "description": "Update a store attribute<br />Scope for public applications : write_settings",
        "operationId": "api.store.misc.update",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "store_attribute",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "store_id",
                    "format": "int32"
                  },
                  "store_attribute": {
                    "type": "string",
                    "description": "One of the following store attribute : private_sales_start_date, sales_start_date, sales_end_date, happy_hour_start_time, happy_hour_end_time, css",
                    "enum": [
                      "private_sales_start_date",
                      "sales_start_date",
                      "sales_end_date",
                      "happy_hour_start_time",
                      "happy_hour_end_time",
                      "css"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value. If none, leave empty"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "store_attribute",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "integer",
                    "description": "store_id",
                    "format": "int32"
                  },
                  "store_attribute": {
                    "type": "string",
                    "description": "One of the following store attribute : private_sales_start_date, sales_start_date, sales_end_date, happy_hour_start_time, happy_hour_end_time, css",
                    "enum": [
                      "private_sales_start_date",
                      "sales_start_date",
                      "sales_end_date",
                      "happy_hour_start_time",
                      "happy_hour_end_time",
                      "css"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value. If none, leave empty"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Value successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Returns subscriptions",
        "description": "Returns subscriptions<br />Scope for public applications : read_settings",
        "operationId": "api.subscriptions.get",
        "responses": {
          "200": {
            "description": "Subscriptions",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers/": {
      "get": {
        "tags": [
          "suppliers"
        ],
        "summary": "Returns suppliers by ID",
        "description": "Returns suppliers by ID<br />Scope for public applications : read products",
        "operationId": "api.suppliers.index",
        "responses": {
          "200": {
            "description": "Suppliers overview",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/suppliers"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "suppliers"
        ],
        "summary": "Update a supplier",
        "description": "Update a supplier<br />Scope for public applications : write_products",
        "operationId": "api.suppliers.update",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "supplier_attribute",
                  "supplier_id"
                ],
                "type": "object",
                "properties": {
                  "supplier_id": {
                    "type": "integer",
                    "description": "ID of the supplier that needs to be updated",
                    "format": "int32"
                  },
                  "supplier_attribute": {
                    "type": "string",
                    "description": "One of the following supplier attribute : supplier_name, supplier_enabled, supplier_position, supplier_contact, supplier_email, supplier_url, supplier_address, supplier_ref_ext",
                    "enum": [
                      "supplier_name",
                      "supplier_enabled",
                      "supplier_position",
                      "supplier_contact",
                      "supplier_email",
                      "supplier_url",
                      "supplier_address",
                      "supplier_ref_ext"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the supplier attribute"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "supplier_attribute",
                  "supplier_id"
                ],
                "type": "object",
                "properties": {
                  "supplier_id": {
                    "type": "integer",
                    "description": "ID of the supplier that needs to be updated",
                    "format": "int32"
                  },
                  "supplier_attribute": {
                    "type": "string",
                    "description": "One of the following supplier attribute : supplier_name, supplier_enabled, supplier_position, supplier_contact, supplier_email, supplier_url, supplier_address, supplier_ref_ext",
                    "enum": [
                      "supplier_name",
                      "supplier_enabled",
                      "supplier_position",
                      "supplier_contact",
                      "supplier_email",
                      "supplier_url",
                      "supplier_address",
                      "supplier_ref_ext"
                    ]
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the supplier attribute"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Supplier successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "suppliers"
        ],
        "summary": "Create a new supplier",
        "description": "Create a new supplier<br />Scope for public applications : write_products",
        "operationId": "api.suppliers.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "supplier_name": {
                    "type": "string",
                    "description": "Name of the supplier that needs to be added"
                  },
                  "supplier_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "supplier_name": {
                    "type": "string",
                    "description": "Name of the supplier that needs to be added"
                  },
                  "supplier_ref_ext": {
                    "type": "string",
                    "description": "External reference"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customers address successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers/{supplier_id}": {
      "delete": {
        "tags": [
          "suppliers"
        ],
        "summary": "Delete a supplier",
        "description": "Delete a supplier. All products with the deleted supplier will loose the information. Same for statistics for this supplier.<br />Scope for public applications : write_products",
        "operationId": "api.suppliers.delete",
        "parameters": [
          {
            "name": "supplier_id",
            "in": "path",
            "description": "ID of the supplier that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/taxes": {
      "get": {
        "tags": [
          "taxes"
        ],
        "summary": "Returns taxes by ID",
        "description": "Returns taxes by ID<br />Scope for public applications : read_settings",
        "operationId": "api.taxes.index",
        "responses": {
          "200": {
            "description": "Taxes overview",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taxes"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/till/{store_id}/{year}/{month}": {
      "get": {
        "tags": [
          "till"
        ],
        "summary": "Returns cash movements for a store_id for a specific month",
        "description": "Returns cash movements for a store_id for a specific month<br />Scope for public applications : read_reports",
        "operationId": "api.till.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Till operations",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/till/cash_in": {
      "post": {
        "tags": [
          "till"
        ],
        "summary": "Add cash to your till",
        "description": "Add cash to your till (aside from your sales payments) such as your cash float or additional money<br />Scope for public applications : write_reports",
        "operationId": "api.till.cash_in",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "amount",
                  "currency_code",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "string",
                    "description": "store_id"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Amount"
                  },
                  "currency_code": {
                    "type": "string",
                    "description": "Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "amount",
                  "currency_code",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "string",
                    "description": "store_id"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Amount"
                  },
                  "currency_code": {
                    "type": "string",
                    "description": "Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cash successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized action",
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "content": {}
          }
        }
      }
    },
    "/till/cash_out": {
      "post": {
        "tags": [
          "till"
        ],
        "summary": "Remove cash from your till",
        "description": "Remove cash from your till (aside from change on cash payments) such as safe drops or store expenses<br />Scope for public applications : write_reports",
        "operationId": "api.till.cash_out",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "amount",
                  "currency_code",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "string",
                    "description": "store_id"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Amount"
                  },
                  "currency_code": {
                    "type": "string",
                    "description": "Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "amount",
                  "currency_code",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "string",
                    "description": "store_id"
                  },
                  "amount": {
                    "type": "string",
                    "description": "Amount"
                  },
                  "currency_code": {
                    "type": "string",
                    "description": "Currency. ISO 4217 currency code https://en.wikipedia.org/wiki/ISO_4217#Active_codes"
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cash successfully removed",
            "content": {}
          },
          "401": {
            "description": "Unauthorized action",
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "content": {}
          }
        }
      }
    },
    "/time_tracking/check_in": {
      "post": {
        "tags": [
          "time_tracking"
        ],
        "summary": "Check in a unique card_id",
        "description": "Check in a unique card_id<br />Scope for public applications : write_time_tracking",
        "operationId": "api.time_tracking.check_in",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "card_id",
                  "customers_id",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "string",
                    "description": "store_id"
                  },
                  "customers_id": {
                    "type": "string",
                    "description": "customers_id"
                  },
                  "card_id": {
                    "type": "string",
                    "description": "Card ID"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "card_id",
                  "customers_id",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "string",
                    "description": "store_id"
                  },
                  "customers_id": {
                    "type": "string",
                    "description": "customers_id"
                  },
                  "card_id": {
                    "type": "string",
                    "description": "Card ID"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Time tracking successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/time_tracking/check_out": {
      "post": {
        "tags": [
          "time_tracking"
        ],
        "summary": "Check out a unique card_id",
        "description": "Check out a unique card_id<br />Scope for public applications : write_time_tracking",
        "operationId": "api.time_tracking.check_out",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "card_id",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "string",
                    "description": "store_id"
                  },
                  "card_id": {
                    "type": "string",
                    "description": "Card ID"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "card_id",
                  "store_id"
                ],
                "type": "object",
                "properties": {
                  "store_id": {
                    "type": "string",
                    "description": "store_id"
                  },
                  "card_id": {
                    "type": "string",
                    "description": "Card ID"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Check out OK",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/time_tracking/{time_tracking_id}/": {
      "get": {
        "tags": [
          "time_tracking"
        ],
        "summary": "Returns time_tracking_id details",
        "description": "Returns time_tracking_id details<br />Scope for public applications : read_time_tracking",
        "operationId": "api.time_tracking.index",
        "parameters": [
          {
            "name": "time_tracking_id",
            "in": "path",
            "description": "time_tracking_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "time_tracking overview",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "time_tracking"
        ],
        "summary": "Update a time_tracking id",
        "description": "Update a time_tracking id<br />Scope for public applications : write_time_tracking",
        "operationId": "api.time_tracking.update",
        "parameters": [
          {
            "name": "time_tracking_id",
            "in": "path",
            "description": "time_tracking_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "time_tracking_attribute"
                ],
                "type": "object",
                "properties": {
                  "time_tracking_attribute": {
                    "type": "string",
                    "description": "One of the following time_tracking_attribute : sale_id, hide_time_tracking (0|1), customer_id, start, end"
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the time_tracking attribute"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "time_tracking_attribute"
                ],
                "type": "object",
                "properties": {
                  "time_tracking_attribute": {
                    "type": "string",
                    "description": "One of the following time_tracking_attribute : sale_id, hide_time_tracking (0|1), customer_id, start, end"
                  },
                  "new_value": {
                    "type": "string",
                    "description": "New value for the time_tracking attribute"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "time_tracking id successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/time_tracking_date/{store_id}/{year}/{month}/{day}/": {
      "get": {
        "tags": [
          "time_tracking"
        ],
        "summary": "Returns time_tracking details for store_id for a specific day",
        "description": "Returns time_tracking details for store_id for a specific day<br />Scope for public applications : read_time_tracking",
        "operationId": "api.time_tracking_date.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "time_tracking overview for store_id for a specific day",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/time_tracking_sale/{sale_id}/": {
      "get": {
        "tags": [
          "time_tracking"
        ],
        "summary": "Returns time_tracking_id details for a given sale_id",
        "description": "Returns time_tracking_id details for a given sale_id<br />Scope for public applications : read_time_tracking",
        "operationId": "api.time_tracking_sale.index",
        "parameters": [
          {
            "name": "sale_id",
            "in": "path",
            "description": "sale_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "time_tracking overview",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customers_time_tracking/{customer_id}/": {
      "get": {
        "tags": [
          "time_tracking"
        ],
        "summary": "Returns time_tracking for a specific customer_id",
        "description": "Returns time_tracking for a specific customer_id<br />Scope for public applications : read_time_tracking",
        "operationId": "api.customers_time_tracking.index",
        "parameters": [
          {
            "name": "customer_id",
            "in": "path",
            "description": "customer_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "time_tracking overview",
            "content": {}
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/translations/{language}/{ressource}": {
      "get": {
        "tags": [
          "translations"
        ],
        "summary": "Returns translations for a specific language & ressource",
        "description": "Returns translations for a specific language & ressource<br />Scope for public applications : read_products",
        "operationId": "api.translations.language",
        "parameters": [
          {
            "name": "language",
            "in": "path",
            "description": "One of the following language : fr, en, es, de, ro, it, ru, pt, pl, hu, ja, zh, nl, sv, da, lt, ar, sk, hi, cs, th, ko, tr",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "fr",
                "en",
                "es",
                "de",
                "ro",
                "it",
                "ru",
                "pt",
                "pl",
                "hu",
                "ja",
                "zh",
                "nl",
                "sv",
                "da",
                "lt",
                "ar",
                "sk",
                "hi",
                "cs",
                "th",
                "ko",
                "tr"
              ]
            }
          },
          {
            "name": "ressource",
            "in": "path",
            "description": "One of the following ressources : category, category_desc, product, product_desc, product_tag, product_tag_desc, modifier, size_type, size",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "category",
                "category_desc",
                "product",
                "product_desc",
                "product_tag",
                "product_tag_desc",
                "modifier",
                "size_type",
                "size"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns translations for a specific language & ressource",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/translations_by_ressource_id/{ressource}/{id}": {
      "get": {
        "tags": [
          "translations"
        ],
        "summary": "Returns translations for a specific ressource id",
        "description": "Returns translations for a specific ressource id<br />Scope for public applications : read_products",
        "operationId": "api.translations_by_ressource_id.language",
        "parameters": [
          {
            "name": "ressource",
            "in": "path",
            "description": "One of the following ressources : category, category_desc, product, product_desc, product_tag, product_tag_desc, modifier, size_type, size",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "category",
                "category_desc",
                "product",
                "product_desc",
                "product_tag",
                "product_tag_desc",
                "modifier",
                "size_type",
                "size"
              ]
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns translations for a specific ressource id",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/translations/": {
      "post": {
        "tags": [
          "translations"
        ],
        "summary": "Create a new translation",
        "description": "Create a new translation<br />Scope for public applications : write_products",
        "operationId": "api.translation.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "id",
                  "language",
                  "ressource"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id",
                    "format": "int32"
                  },
                  "language": {
                    "type": "string",
                    "description": "One of the following language : fr, en, es, de, ro, it, ru, pt, pl, hu, ja, zh, nl, sv, da, lt, ar, sk, hi, cs, th, ko, tr",
                    "enum": [
                      "fr",
                      "en",
                      "es",
                      "de",
                      "ro",
                      "it",
                      "ru",
                      "pt",
                      "pl",
                      "hu",
                      "ja",
                      "zh",
                      "nl",
                      "sv",
                      "da",
                      "lt",
                      "ar",
                      "sk",
                      "hi",
                      "cs",
                      "th",
                      "ko",
                      "tr"
                    ]
                  },
                  "ressource": {
                    "type": "string",
                    "description": "One of the following ressources : category, category_desc, product, product_desc, product_tag, product_tag_desc, modifier, size_type, size",
                    "enum": [
                      "category",
                      "category_desc",
                      "product",
                      "product_desc",
                      "product_tag",
                      "product_tag_desc",
                      "modifier",
                      "size_type",
                      "size"
                    ]
                  },
                  "tra": {
                    "type": "string",
                    "description": "tra"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "id",
                  "language",
                  "ressource"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "id",
                    "format": "int32"
                  },
                  "language": {
                    "type": "string",
                    "description": "One of the following language : fr, en, es, de, ro, it, ru, pt, pl, hu, ja, zh, nl, sv, da, lt, ar, sk, hi, cs, th, ko, tr",
                    "enum": [
                      "fr",
                      "en",
                      "es",
                      "de",
                      "ro",
                      "it",
                      "ru",
                      "pt",
                      "pl",
                      "hu",
                      "ja",
                      "zh",
                      "nl",
                      "sv",
                      "da",
                      "lt",
                      "ar",
                      "sk",
                      "hi",
                      "cs",
                      "th",
                      "ko",
                      "tr"
                    ]
                  },
                  "ressource": {
                    "type": "string",
                    "description": "One of the following ressources : category, category_desc, product, product_desc, product_tag, product_tag_desc, modifier, size_type, size",
                    "enum": [
                      "category",
                      "category_desc",
                      "product",
                      "product_desc",
                      "product_tag",
                      "product_tag_desc",
                      "modifier",
                      "size_type",
                      "size"
                    ]
                  },
                  "tra": {
                    "type": "string",
                    "description": "tra"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Translation successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Returns users by ID",
        "description": "Returns users by ID<br />Scope for public applications : no access",
        "operationId": "api.users.index",
        "responses": {
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/user/password": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update a user's password",
        "description": "Update a user's password<br />Scope for public applications : no access",
        "operationId": "api.user.update_password",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "user_id"
                ],
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "ID of the user that needs to be updated",
                    "format": "int32"
                  },
                  "new_password": {
                    "type": "string",
                    "description": "New password"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "user_id"
                ],
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "integer",
                    "description": "ID of the user that needs to be updated",
                    "format": "int32"
                  },
                  "new_password": {
                    "type": "string",
                    "description": "New password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User's password successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/user/auth": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Auth a user with login/pass",
        "description": "Auth a user with login/pass<br />Scope for public applications : no access",
        "operationId": "api.user.auth",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "login",
                  "pass"
                ],
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string",
                    "description": "Login"
                  },
                  "pass": {
                    "type": "string",
                    "description": "Password"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "login",
                  "pass"
                ],
                "type": "object",
                "properties": {
                  "login": {
                    "type": "string",
                    "description": "Login"
                  },
                  "pass": {
                    "type": "string",
                    "description": "Password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Auth",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/warehouses": {
      "get": {
        "tags": [
          "warehouses"
        ],
        "summary": "Returns warehouses by ID",
        "description": "Returns warehouses by ID<br />Scope for public applications : read_settings",
        "operationId": "api.warehouses.index",
        "responses": {
          "200": {
            "description": "Warehouses overview",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Returns webhooks",
        "description": "Returns webhooks<br />Scope for public applications : none",
        "operationId": "api.webhooks.get",
        "responses": {
          "200": {
            "description": "Webhooks",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Add a webhook",
        "description": "Add a webhook<br />Scope for public applications : none",
        "operationId": "api.webhooks.add",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "webhook_action",
                  "webhook_label",
                  "webhook_url"
                ],
                "type": "object",
                "properties": {
                  "webhook_label": {
                    "type": "string",
                    "description": "The text that will appear to the merchant. It should be task oriented, and not just the name of your app."
                  },
                  "webhook_url": {
                    "type": "string",
                    "description": "The URL where your app is hosted, or a specific URL for this task. If your url is non valid or if it drops an error, your action will be blocked"
                  },
                  "webhook_action": {
                    "type": "string",
                    "description": "The event type that should initiate the webhook : close sale, update/create product, add/delete payment, add/update stock_order, update/create customer, start/end timestamp, schedule, add/delete product in a sale sale_item, store_credit, validate stock transfer, line_item_exchange, sale_creation, sale_deletion",
                    "enum": [
                      "sale",
                      "product",
                      "payment",
                      "stock_order",
                      "customer",
                      "timestamp",
                      "schedule",
                      "sale_item",
                      "store_credit",
                      "stock_transfer",
                      "line_item_exchange",
                      "sale_creation",
                      "sale_deletion"
                    ]
                  },
                  "webhook_app_id_int": {
                    "type": "string",
                    "description": "The unique webhook id if used by an app (if already exists, it will be replaced). Max 80 chars."
                  },
                  "webhook_store_id": {
                    "type": "integer",
                    "description": "The store id where the webhook should be executed. If value is 0, the webhook will be executed in every store. If empty, default value is 0.",
                    "format": "int32"
                  },
                  "webhook_user_id": {
                    "type": "integer",
                    "description": "The user id for wich the webhook should be executed. If value is 0, the webhook will be executed for all users. If empty, default value is 0",
                    "format": "int32"
                  },
                  "webhook_async": {
                    "type": "integer",
                    "description": "If the webhook is asynchronous. This is usefull if your endpont might be long to respond (more than 4 seconds) or if you have many webhooks for the same action. If empty, default value is 0",
                    "format": "int32"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "webhook_action",
                  "webhook_label",
                  "webhook_url"
                ],
                "type": "object",
                "properties": {
                  "webhook_label": {
                    "type": "string",
                    "description": "The text that will appear to the merchant. It should be task oriented, and not just the name of your app."
                  },
                  "webhook_url": {
                    "type": "string",
                    "description": "The URL where your app is hosted, or a specific URL for this task. If your url is non valid or if it drops an error, your action will be blocked"
                  },
                  "webhook_action": {
                    "type": "string",
                    "description": "The event type that should initiate the webhook : close sale, update/create product, add/delete payment, add/update stock_order, update/create customer, start/end timestamp, schedule, add/delete product in a sale sale_item, store_credit, validate stock transfer, line_item_exchange, sale_creation, sale_deletion",
                    "enum": [
                      "sale",
                      "product",
                      "payment",
                      "stock_order",
                      "customer",
                      "timestamp",
                      "schedule",
                      "sale_item",
                      "store_credit",
                      "stock_transfer",
                      "line_item_exchange",
                      "sale_creation",
                      "sale_deletion"
                    ]
                  },
                  "webhook_app_id_int": {
                    "type": "string",
                    "description": "The unique webhook id if used by an app (if already exists, it will be replaced). Max 80 chars."
                  },
                  "webhook_store_id": {
                    "type": "integer",
                    "description": "The store id where the webhook should be executed. If value is 0, the webhook will be executed in every store. If empty, default value is 0.",
                    "format": "int32"
                  },
                  "webhook_user_id": {
                    "type": "integer",
                    "description": "The user id for wich the webhook should be executed. If value is 0, the webhook will be executed for all users. If empty, default value is 0",
                    "format": "int32"
                  },
                  "webhook_async": {
                    "type": "integer",
                    "description": "If the webhook is asynchronous. This is usefull if your endpont might be long to respond (more than 4 seconds) or if you have many webhooks for the same action. If empty, default value is 0",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Webhook successfully added",
            "content": {}
          },
          "401": {
            "description": "Unauthorized action",
            "content": {}
          },
          "500": {
            "description": "Server Error",
            "content": {}
          }
        }
      }
    },
    "/webhooks/{webhook_id}": {
      "delete": {
        "tags": [
          "webhooks"
        ],
        "summary": "Delete a webhook",
        "description": "Delete a webhook<br />Scope for public applications : none",
        "operationId": "api.webhooks.delete",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "description": "webhook_id to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook successfully deleted",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found - the resource does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/z/payment_types/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "z"
        ],
        "summary": "Returns sales payments for store_id for a specific day",
        "description": "Returns sales payments for store_id for a specific day<br />Scope for public applications : read_reports",
        "operationId": "api.z.payment_types.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "End-of-day report by payment types",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/z/payments_received/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "z"
        ],
        "summary": "Returns payments received for store_id for a specific day",
        "description": "Returns payments received for store_id for a specific day<br />Scope for public applications : read_reports",
        "operationId": "api.z.payments_received.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "End-of-day report by payments received",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/z/customers_credit_deposits/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "z"
        ],
        "summary": "Returns customers credit deposits for store_id for a specific day",
        "description": "Returns customers credit deposits for store_id for a specific day<br />Scope for public applications : read_reports",
        "operationId": "api.z.customers_credit_deposits.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "End-of-day report by customers credit deposits",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/z/customers/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "z"
        ],
        "summary": "Returns customers sales for store_id for a specific day",
        "description": "Returns customers sales for store_id for a specific day<br />Scope for public applications : read_reports",
        "operationId": "api.z.customers.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "End-of-day report by customers sales",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/z/taxes/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "z"
        ],
        "summary": "Returns sales taxes for store_id for a specific day",
        "description": "Returns sales taxes for store_id for a specific day<br />Scope for public applications : read_reports",
        "operationId": "api.z.taxes.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "End-of-day report by taxes",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/z/categories/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "z"
        ],
        "summary": "Returns categories statistics for store_id for a specific day",
        "description": "Returns categories statistics for store_id for a specific day<br />Scope for public applications : read_reports",
        "operationId": "api.z.categories.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "End-of-day report by categories",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/z/accounting_accounts/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "z"
        ],
        "summary": "Returns accounting_accounts statistics for store_id for a specific day",
        "description": "Returns accounting_accounts statistics for store_id for a specific day<br />Scope for public applications : read_reports",
        "operationId": "api.z.accounting_accounts.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "End-of-day report by accouting accounts",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/z/date/": {
      "put": {
        "tags": [
          "z",
          "sales"
        ],
        "summary": "Update the end-of-day date for a sale_id",
        "description": "Update the end-of-day date for a sale_id<br />Scope for public applications : write_reports",
        "operationId": "api.z.update_date_z",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "date_z",
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "string",
                    "description": "Sale ID"
                  },
                  "date_z": {
                    "type": "string",
                    "description": "Date Z | format : YYYY-MM-DD"
                  }
                }
              }
            },
            "application/json": {
              "schema": {
                "required": [
                  "date_z",
                  "sale_id"
                ],
                "type": "object",
                "properties": {
                  "sale_id": {
                    "type": "string",
                    "description": "Sale ID"
                  },
                  "date_z": {
                    "type": "string",
                    "description": "Date Z | format : YYYY-MM-DD"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "date_z successfully updated",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/z/closure/{store_id}/{year}/{month}/{day}": {
      "post": {
        "tags": [
          "z"
        ],
        "summary": "Close the day and previous days",
        "description": "Close the day and previous days<br />Scope for public applications : forbidden",
        "operationId": "api.z.closure.add",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "End-of-day report by taxes",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/z/cash_book/{store_id}/{year}/{month}/{day}": {
      "get": {
        "tags": [
          "z"
        ],
        "summary": "Returns cash book movements for store_id for a specific day or month",
        "description": "Returns cash book movements for store_id for a specific day or month <br />Scope for public applications : read_reports<br />Results per page : 250",
        "operationId": "api.z.cash_book.index",
        "parameters": [
          {
            "name": "store_id",
            "in": "path",
            "description": "store_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "year",
            "in": "path",
            "description": "Year",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "month",
            "in": "path",
            "description": "Month",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "day",
            "in": "path",
            "description": "Day",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cash book movements report",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - invalid authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient user rights",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - an error was encountered when parsing the data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "formData_store_id": {
        "type": "integer",
        "description": "store_id",
        "format": "int32"
      },
      "formData_vendor_id": {
        "type": "integer",
        "description": "vendor_id",
        "format": "int32"
      },
      "formData_url": {
        "type": "string",
        "description": "url"
      },
      "error": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "error_description": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "details": {
            "type": "object",
            "properties": {}
          }
        }
      },
      "category": {
        "required": [
          "category_bck_color",
          "category_color",
          "category_enabled",
          "category_id",
          "category_id_parent",
          "category_name",
          "category_position"
        ],
        "type": "object",
        "properties": {
          "category_id": {
            "type": "number"
          },
          "category_name": {
            "type": "string"
          },
          "category_id_parent": {
            "type": "number"
          },
          "category_enabled": {
            "type": "number"
          },
          "category_position": {
            "type": "number"
          },
          "category_bck_color": {
            "type": "string"
          },
          "category_color": {
            "type": "string"
          }
        }
      },
      "product": {
        "required": [
          "product_barcode",
          "product_brand",
          "product_category",
          "product_discount_price",
          "product_id",
          "product_model",
          "product_price",
          "product_size_type",
          "product_stock_management",
          "product_supplier",
          "product_supplier_reference",
          "product_supply_price",
          "product_vat"
        ],
        "type": "object",
        "properties": {
          "product_id": {
            "type": "number"
          },
          "product_model": {
            "type": "string"
          },
          "product_barcode": {
            "type": "string"
          },
          "product_brand": {
            "type": "number"
          },
          "product_supplier": {
            "type": "number"
          },
          "product_price": {
            "type": "string"
          },
          "product_discount_price": {
            "type": "string"
          },
          "product_supply_price": {
            "type": "string"
          },
          "product_category": {
            "type": "number"
          },
          "product_size_type": {
            "type": "number"
          },
          "product_stock_management": {
            "type": "number"
          },
          "product_supplier_reference": {
            "type": "string"
          },
          "product_vat": {
            "type": "number"
          }
        }
      },
      "brands": {
        "required": [
          "brand_enabled",
          "brand_id",
          "brand_name",
          "brand_position"
        ],
        "type": "object",
        "properties": {
          "brand_id": {
            "type": "integer"
          },
          "brand_name": {
            "type": "string"
          },
          "brand_enabled": {
            "type": "integer"
          },
          "brand_position": {
            "type": "integer"
          }
        }
      },
      "suppliers": {
        "required": [
          "supplier_enabled",
          "supplier_id",
          "supplier_name",
          "supplier_position"
        ],
        "type": "object",
        "properties": {
          "supplier_id": {
            "type": "integer"
          },
          "supplier_name": {
            "type": "string"
          },
          "supplier_enabled": {
            "type": "integer"
          },
          "supplier_position": {
            "type": "integer"
          }
        }
      },
      "taxes": {
        "required": [
          "tax_default",
          "tax_enabled",
          "tax_id",
          "tax_name",
          "tax_position",
          "tax_value"
        ],
        "type": "object",
        "properties": {
          "tax_id": {
            "type": "integer"
          },
          "tax_value": {
            "type": "string"
          },
          "tax_name": {
            "type": "string"
          },
          "tax_enabled": {
            "type": "integer"
          },
          "tax_default": {
            "type": "integer"
          },
          "tax_position": {
            "type": "integer"
          }
        }
      },
      "users": {
        "required": [
          "user_email",
          "user_first_name",
          "user_id",
          "user_last_name",
          "user_manager_id",
          "user_validity"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer"
          },
          "user_last_name": {
            "type": "string"
          },
          "user_first_name": {
            "type": "string"
          },
          "user_email": {
            "type": "string"
          },
          "user_fasti": {
            "type": "integer"
          },
          "user_validity": {
            "type": "string"
          },
          "user_manager_id": {
            "type": "integer"
          }
        }
      },
      "productslist": {
        "required": [
          "number",
          "start"
        ],
        "type": "object",
        "properties": {
          "start": {
            "type": "integer"
          },
          "number": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Message successfully sent",
        "content": {}
      },
      "401": {
        "description": "Unauthorized - invalid authentication",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden - insufficient user rights",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "406": {
        "description": "Not Acceptable - wrong 'Content-type'; accepted: 'application/x-www-form-urlencoded', 'application/json'",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "422": {
        "description": "Unprocessable entity - an error was encountered when parsing the data",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}
